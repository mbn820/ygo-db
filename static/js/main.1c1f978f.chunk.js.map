{"version":3,"sources":["assets/logo.png","components/NavigationBar.js","components/SettingsBar.js","components/SearchForm.js","components/CardGrid.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","NavigationBar","searchFn","debouncedSearch","useCallback","debounce","term","collapseOnSelect","bg","variant","expand","fixed","Container","Brand","src","logo","height","Toggle","Collapse","Nav","className","Link","href","Form","InputGroup","Prepend","Text","FormControl","type","placeholder","onChange","e","target","value","SettingsBar","Card","body","SearchForm","props","types","Main","Extra","races","Monster","Spell","Trap","Header","Group","Label","size","Append","Body","Control","as","Object","keys","map","key","label","race","attribute","cardEffect","banList","format","archetype","rarity","cardSet","linkArrow","Button","block","CardGrid","useState","cards","selectedCard","setSelectedCard","showModal","setShowModal","Row","card","Col","sm","md","lg","id","Image","card_images","image_url_small","onClick","onSelectCard","Modal","show","onHide","centered","closeButton","Title","name","image_url","App","BASE_URL","data","setCards","useEffect","axios","get","then","res","console","log","searchTerm","style","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.1c1f978f.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.6025d515.png\";","import React, { useCallback } from 'react';\nimport NavBar from 'react-bootstrap/Navbar';\nimport Nav from 'react-bootstrap/Nav';\nimport Container from 'react-bootstrap/Container';\nimport Form from 'react-bootstrap/Form';\nimport FormControl from 'react-bootstrap/FormControl';\nimport InputGroup from 'react-bootstrap/InputGroup';\nimport Button from 'react-bootstrap/Button';\nimport debounce from 'lodash/debounce';\nimport logo from '../assets/logo.png'\n\nconst NavigationBar = ({ searchFn }) => {\n  const debouncedSearch = useCallback(debounce(term => searchFn(term), 1000), []);\n\n  return (  \n    <div>            \n      <NavBar collapseOnSelect bg=\"dark\" variant=\"dark\" expand=\"lg\" fixed=\"top\">\n        <Container>\n          <NavBar.Brand>\n            <img src={logo} height=\"50\"/>\n          </NavBar.Brand>\n          <NavBar.Toggle></NavBar.Toggle>\n          <NavBar.Collapse>\n            <Nav className=\"mr-auto d-flex align-items-center\">\n              <Nav.Link href=\"#latest\">Latest</Nav.Link>\n              <Nav.Link href=\"#decks\">Decks</Nav.Link>\n              <Nav.Link href=\"#sets\">Sets</Nav.Link>\n              <Nav.Link href=\"#archetypes\">Archetypes</Nav.Link>\n              <Nav.Link href=\"#deck-builder\">Deck Builder</Nav.Link>\n            </Nav>\n            <Form>\n              <InputGroup>\n                <InputGroup.Prepend>\n                  <InputGroup.Text variant=\"primary\"><i className=\"fa fa-search\"></i></InputGroup.Text>\n                </InputGroup.Prepend>\n                <FormControl type=\"text\" placeholder=\"Search Cards\" className=\"mr-2\" onChange={e => debouncedSearch(e.target.value)}></FormControl>\n              </InputGroup>\n            </Form>\n          </NavBar.Collapse>\n        </Container>\n      </NavBar>\n    </div>\n  );\n};\n\nexport default NavigationBar;\n","import React from 'react';\nimport Card from 'react-bootstrap/Card';\n\nconst SettingsBar = () => {\n  return (\n    <div className=\"mb-3\">\n      <Card body>Settings</Card>\n    </div>\n  );\n};\n\nexport default SettingsBar;\n\n","import React from 'react';\nimport Card from 'react-bootstrap/Card';\nimport Form from 'react-bootstrap/Form';\nimport FormControl from 'react-bootstrap/FormControl';\nimport InputGroup from 'react-bootstrap/InputGroup';\nimport Button from 'react-bootstrap/Button';\n\nconst SearchForm = props => {\n  const types = {\n    Main: [\n      'Effect Monster', 'Flip Effect Monster', 'Flip Tuner Effect Monster', 'Gemini Monster',\n      'Normal Monster', 'Normal Tuner Monster', 'Pendulum Effect Monster', 'Pendulum Flip Effect Monster',\n      'Pendulum Normal Monster', 'Pendulum Tuner Effect Monster', 'Ritual Effect Monster',\n      'Skill Card', 'Spell Card', 'Spirit Monster', 'Toon Monster', 'Trap Card', 'Tuner Monster',\n      'Union Effect Monster'\n    ],\n    Extra: [\n      'Fusion Monster', 'Link Monster', 'Pendulum Effect Fusion Monster', 'Synchro Monster',\n      'Synchro  Pendulum Effect Monster', 'Synchro Tuner Monster', 'XYZ Monster',\n      'XYZ Pendulum Effect Monster'\n    ]\n  };\n\n  const races = {\n    Monster: [\n      'Aqua', 'Beast', 'Beast-warrior', 'Creator-God', 'Cyberse', 'Dinosaur', 'Divine-Beast',\n      'Dragon', 'Fairy', 'Fiend', 'Fish', 'Insect', 'Machine', 'Plant', 'Psychic', 'Pyro', 'Reptile',\n      'Rock', 'Sea Serpent', 'Spellcaster', 'Thunder', 'Warrior', 'Winged-Beast'\n    ],\n    Spell: ['Normal', 'Field', 'Equip', 'Continous', 'Quick-Play', 'Ritual'],\n    Trap: ['Normal', 'Continous', 'Counter']\n  };\n\n  const attributes = ['DARK', 'EARTH', 'FIRE', 'LIGHT', 'WATER', 'WIND', 'DIVINE'];\n\n  const cardEffects = [\n    'Back to Deck', 'Back to Hand', 'Banish', 'Change ATK or DEF', 'Control',\n    'Counter', 'Damage LP', 'Destroy Monster', 'Direct Attack', 'Draw', 'Effect Damage',\n    'Fusion-Related', 'Gamble', 'Graveyard', 'Increase Level', 'LINK-Related', 'Negate', 'Pendulum-Related',\n    'Piercing', 'Recover LP', 'Repeat Attack', 'Ritual-Related', 'Search', 'Select', 'Special Summon',\n    'Synchro-Related', 'Token', 'Tuner-Related', 'Win the Duel', 'XYZ-Related'\n  ];\n\n  const banLists = ['TCG', 'OCG', 'Goat'];\n\n  const formats = ['Duel Links', 'Speed Duel', 'Rush Duel', 'GOAT', 'OCG GOAT'];\n\n  const archetypes = [];\n\n  const rarities = [\n    'Common', 'Collector\\'s Rare'\n  ];\n\n  const cardSets = [];\n\n  const linkArrows = [];\n\n  return (\n    <div className=\"mb-4\">\n      <Card>\n        <Card.Header>\n          <Form.Group>\n            <Form.Label className=\"small\">Card Name</Form.Label>\n            <InputGroup size=\"sm\">\n              <FormControl type=\"text\" placeholder=\"Search Cards\"></FormControl>\n              <InputGroup.Append>\n                <InputGroup.Text variant=\"primary\"><i className=\"fa fa-search\"></i></InputGroup.Text>\n              </InputGroup.Append>\n            </InputGroup>\n          </Form.Group>\n        </Card.Header>\n        <Card.Body className=\"row\">\n          <Form.Group className=\"col-lg-6 col-md-12\">\n            <Form.Label className=\"small\">Card Type</Form.Label>\n            <Form.Control as=\"select\" size=\"sm\">\n              {Object.keys(types).map(key => (\n                <optgroup label={key}>\n                  {types[key].map(type => <option value={type}>{type}</option>)}\n                </optgroup>\n              ))}\n            </Form.Control>\n          </Form.Group>\n          <Form.Group className=\"col-lg-6 col-md-12\">\n            <Form.Label className=\"small\">Race</Form.Label>\n            <Form.Control as=\"select\" size=\"sm\">\n              {Object.keys(races).map(key => (\n                <optgroup label={key}>\n                  {races[key].map(race => <option value={race}>{race}</option>)}\n                </optgroup>\n              ))}\n            </Form.Control>\n          </Form.Group>\n          <Form.Group className=\"col-lg-6 col-md-12\">\n            <Form.Label className=\"small\">Attribute</Form.Label>\n            <Form.Control as=\"select\" size=\"sm\">\n              {attributes.map(attribute => <option value={attribute}>{attribute}</option>)}\n            </Form.Control>\n          </Form.Group>\n          <Form.Group className=\"col-lg-6 col-md-12\">\n            <Form.Label className=\"small\">Card Effect</Form.Label>\n            <Form.Control as=\"select\" size=\"sm\">\n              {cardEffects.map(cardEffect => <option value={cardEffect}>{cardEffect}</option>)}\n            </Form.Control>\n          </Form.Group>\n          <Form.Group className=\"col-lg-6 col-md-12\">\n            <Form.Label className=\"small\">Ban List</Form.Label>\n            <Form.Control as=\"select\" size=\"sm\">\n              {banLists.map(banList => <option value={banList}>{banList}</option>)}\n            </Form.Control>\n          </Form.Group>\n          <Form.Group className=\"col-lg-6 col-md-12\">\n            <Form.Label className=\"small\">Format</Form.Label>\n            <Form.Control as=\"select\" size=\"sm\">\n              {formats.map(format => <option value={format}>{format}</option>)}\n            </Form.Control>\n          </Form.Group>\n          <Form.Group className=\"col-lg-6 col-md-12\">\n            <Form.Label className=\"small\">Archetype</Form.Label>\n            <Form.Control as=\"select\" size=\"sm\">\n              {archetypes.map(archetype => <option value={archetype}>{archetype}</option>)}\n            </Form.Control>\n          </Form.Group>\n          <Form.Group className=\"col-lg-6 col-md-12\">\n            <Form.Label className=\"small\">Rarity</Form.Label>\n            <Form.Control as=\"select\" size=\"sm\">\n              {rarities.map(rarity => <option value={rarity}>{rarity}</option>)}\n            </Form.Control>\n          </Form.Group>\n          <Form.Group className=\"col-lg-6 col-md-12\">\n            <Form.Label className=\"small\">Card Set</Form.Label>\n            <Form.Control as=\"select\" size=\"sm\">\n              {cardSets.map(cardSet => <option value={cardSet}>{cardSet}</option>)}\n            </Form.Control>\n          </Form.Group>\n          <Form.Group className=\"col-lg-6 col-md-12\">\n            <Form.Label className=\"small\">Link Arrow</Form.Label>\n            <Form.Control as=\"select\" size=\"sm\">\n              {linkArrows.map(linkArrow => <option value={linkArrow}>{linkArrow}</option>)}\n            </Form.Control>\n          </Form.Group>\n          {/* <div className=\"mt-3\"></div> */}\n          <div className=\"col-lg-6 col-md-12\">\n            <Button variant=\"warning\" className=\"mt-3\" block>Reset</Button>\n          </div>\n          <div className=\"col-lg-6 col-md-12\">\n            <Button className=\"mt-3\" block>Search</Button>\n          </div>\n        </Card.Body>\n      </Card>\n    </div>\n  );\n};\n\nexport default SearchForm;\n\n","import React, { useState } from 'react';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Image from 'react-bootstrap/Image';\nimport Modal from 'react-bootstrap/Modal'\n\nconst CardGrid = props => {\n  const [selectedCard, setSelectedCard] = useState(props.cards[0]);\n  const [showModal, setShowModal] = useState(false);\n\n  const onSelectCard = card => {\n    setSelectedCard(card);\n    setShowModal(true);\n  };\n\n  return (\n    <div>\n      <Row className=\"d-flex justify-content-center\">\n        {props.cards.map(card => (\n          <Col sm={6} md={6} lg={3} className=\"mb-3 d-flex justify-content-center\" key={card.id}>\n            <Image src={card?.card_images[0]?.image_url_small} onClick={() => onSelectCard(card)}></Image>\n          </Col>\n        ))}\n      </Row>\n\n      <Modal show={showModal} onHide={() => setShowModal(false)} centered=\"true\">\n        <Modal.Header closeButton>\n          <Modal.Title>{selectedCard?.name}</Modal.Title>\n        </Modal.Header>\n        <Modal.Body className=\"d-flex justify-content-center\">\n          <Image src={selectedCard?.card_images[0]?.image_url} className=\"container-fluid\"></Image>\n        </Modal.Body>\n      </Modal> \n    </div>\n  )\n}\n\nexport default CardGrid;\n","import React, { useState, useEffect } from 'react';\nimport './App.css';\nimport NavigationBar from './components/NavigationBar';\nimport SettingsBar from './components/SettingsBar';\nimport SearchForm from './components/SearchForm';\nimport CardGrid from './components/CardGrid';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport axios from 'axios';\n\nfunction App() {\n  const BASE_URL = 'https://db.ygoprodeck.com/api/v7/cardinfo.php?num=30&offset=0';\n  const [cards, setCards] = useState({ data: [] });\n\n  useEffect(() => {\n    axios.get(BASE_URL)\n      .then(res => {\n        console.log(res.data);\n        setCards(res.data);\n      });\n\n  }, []);\n\n  const searchCard = (searchTerm) => {\n    console.log('Searching: ' + searchTerm);\n\n    axios.get(`${BASE_URL}&fname=${searchTerm}`)\n      .then(res => setCards(res.data));\n  };\n\n  return (\n    <div>\n      <NavigationBar searchFn={searchCard}></NavigationBar>\n      <div style={{height: 100}}></div>\n      <Container>\n        <SettingsBar></SettingsBar>\n        <Row>\n          <Col md={4} sm={12}>\n            <SearchForm />\n          </Col>\n          <Col md={8} sm={12}>\n            <CardGrid cards={cards.data}></CardGrid>\n          </Col>\n        </Row>\n      </Container>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}