{"version":3,"sources":["assets/card-back.png","assets/beast.png","assets/logo.png","assets/loading.gif","assets/trap.png","assets/spell.png","assets/light.png","assets/dark.png","assets/water.png","assets/fire.png","assets/earth.png","assets/wind.png","assets/divine.png","assets/level.png","assets/rank.png","assets/continuous.png","assets/counter.png","assets/equip.png","assets/field.png","assets/quick-play.png","assets/ritual.png","assets/aqua.png","assets/dinosaur.png","assets/divine-beast.png","assets/dragon.png","assets/fairy.png","assets/fiend.png","assets/fish.png","assets/insect.png","assets/machine.png","assets/plant.png","assets/psychic.png","assets/pyro.png","assets/reptile.png","assets/rock.png","assets/sea-serpent.png","assets/spellcaster.png","assets/thunder.png","assets/warrior.png","assets/winged-beast.png","assets/zombie.png","assets/scale.png","components/NavigationBar/index.js","components/Footer/index.js","service/ygodatabaseservice.js","components/Loading/index.js","routes/CardSearch/context/CardSearchContext.js","utils/iconUtils.js","components/CardDetails/index.js","components/CardGallery/index.js","components/CardList/index.js","components/CardImage/index.js","components/CardGrid/index.js","routes/CardSearch/components/ResultInfo.js","components/ParamsSelect/index.js","routes/CardSearch/components/CardSearchSettings.js","routes/CardSearch/components/CardSearchPagination.js","routes/CardSearch/components/CardSearchForm.js","routes/CardSearch/components/NoResultsFound.js","routes/CardSearch/index.js","routes/PageNotFound/index.js","routes/InProgressPage/index.js","App.js","index.js"],"names":["module","exports","NavigationBar","searchFn","useCallback","debounce","term","collapseOnSelect","bg","variant","expand","fixed","Container","Brand","as","Link","to","src","logo","height","Toggle","Collapse","Nav","className","Footer","gitInfo","Navbar","commit","shortHash","branch","Date","date","toLocaleDateString","resolveUrl","entity","cardsUrl","archetypesUrl","cardSetsUrl","fixParams","params","pageInfo","processedPageInfo","num","size","toString","offset","page","combinedParams","_","Loading","Card","body","Image","loadingGif","CardSearchContext","React","createContext","Icons","attributeIcons","TRAP","SPELL","LIGHT","DARK","WATER","FIRE","EARTH","WIND","DIVINE","levels","level","rank","spellOrTrapTypes","Continuous","Counter","Equip","Field","QuickPlay","Ritual","monsterTypes","Aqua","Beast","BeastWarrior","Dinosaur","DivineBeast","Dragon","Fairy","Fiend","Fish","Insect","Machine","Plant","Psychic","Pyro","Reptile","Rock","SeaSerpent","Spellcaster","Thunder","Warrior","WingedBeast","Zombie","scale","CardDetails","card","isMonster","type","includes","attributeIcon","split","toUpperCase","attribute","spellOrTrapType","race","link","linkval","category","atk","def","DetailItem","text","icon","width","CardGalleryItem","Row","Col","sm","md","card_images","image_url","onClick","console","log","name","archetype","desc","trim","CardImage","useState","loaded","setLoaded","cardBack","onLoad","style","display","cursor","CardGallery","cards","map","key","id","CardListItem","replace","CardList","CardGrid","lg","ResultInfo","useContext","searchResults","endPage","Math","min","meta","total_rows","startPage","max","ParamsSelect","label","value","options","grouped","onChange","displayOption","option","Form","Group","Label","Control","Object","keys","CardSearchSettings","setParams","setPageInfo","search","viewMode","setViewMode","sort","e","update","target","view","CardSearchPagination","lastPage","total_pages","pages","Array","fill","val","index","paginate","Pagination","First","disabled","Prev","length","Item","active","Next","Last","CardSearchForm","setValue","archetypes","setArchetypes","cardSets","setCardSets","useEffect","axios","get","then","res","data","onSearch","pageInfoUpdate","Header","InputGroup","Prepend","Text","FormControl","placeholder","fname","onKeyPress","Button","block","Body","Main","Extra","Monster","Spell","Trap","effect","banList","formats","item","archetype_name","rarity","cardset","set","set_name","linkmarker","NoResultsFound","CardSearch","setSearchResults","loadingResults","setLoadingResults","sortorder","searchCards","catch","err","finally","CardView","Provider","PageNotFound","InProgressPage","App","path","exact","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wGAAAA,EAAOC,QAAU,IAA0B,uC,gBCA3CD,EAAOC,QAAU,IAA0B,mC,uCCA3CD,EAAOC,QAAU,IAA0B,kC,kBCA3CD,EAAOC,QAAU,IAA0B,qC,gBCA3CD,EAAOC,QAAU,IAA0B,kC,gBCA3CD,EAAOC,QAAU,IAA0B,mC,gBCA3CD,EAAOC,QAAU,IAA0B,mC,gBCA3CD,EAAOC,QAAU,IAA0B,kC,gBCA3CD,EAAOC,QAAU,IAA0B,mC,gBCA3CD,EAAOC,QAAU,IAA0B,kC,gBCA3CD,EAAOC,QAAU,IAA0B,mC,gBCA3CD,EAAOC,QAAU,IAA0B,kC,gBCA3CD,EAAOC,QAAU,IAA0B,oC,gBCA3CD,EAAOC,QAAU,IAA0B,mC,gBCA3CD,EAAOC,QAAU,IAA0B,kC,gBCA3CD,EAAOC,QAAU,IAA0B,wC,gBCA3CD,EAAOC,QAAU,IAA0B,qC,gBCA3CD,EAAOC,QAAU,IAA0B,mC,gBCA3CD,EAAOC,QAAU,IAA0B,mC,gBCA3CD,EAAOC,QAAU,IAA0B,wC,gBCA3CD,EAAOC,QAAU,IAA0B,oC,gBCA3CD,EAAOC,QAAU,IAA0B,kC,gBCA3CD,EAAOC,QAAU,IAA0B,sC,gBCA3CD,EAAOC,QAAU,IAA0B,0C,gBCA3CD,EAAOC,QAAU,IAA0B,oC,gBCA3CD,EAAOC,QAAU,IAA0B,mC,gBCA3CD,EAAOC,QAAU,IAA0B,mC,gBCA3CD,EAAOC,QAAU,IAA0B,kC,gBCA3CD,EAAOC,QAAU,IAA0B,oC,gBCA3CD,EAAOC,QAAU,IAA0B,qC,gBCA3CD,EAAOC,QAAU,IAA0B,mC,gBCA3CD,EAAOC,QAAU,IAA0B,qC,gBCA3CD,EAAOC,QAAU,IAA0B,kC,gBCA3CD,EAAOC,QAAU,IAA0B,qC,gBCA3CD,EAAOC,QAAU,IAA0B,kC,gBCA3CD,EAAOC,QAAU,IAA0B,yC,gBCA3CD,EAAOC,QAAU,IAA0B,yC,gBCA3CD,EAAOC,QAAU,IAA0B,qC,gBCA3CD,EAAOC,QAAU,IAA0B,qC,gBCA3CD,EAAOC,QAAU,IAA0B,0C,gBCA3CD,EAAOC,QAAU,IAA0B,oC,gBCA3CD,EAAOC,QAAU,IAA0B,mC,uTC6C5BC,EAlCO,SAAC,GAAkB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","file":"static/js/main.1c252459.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/card-back.f16ec535.png\";","module.exports = __webpack_public_path__ + \"static/media/beast.e0c0d9c7.png\";","module.exports = __webpack_public_path__ + \"static/media/logo.6025d515.png\";","module.exports = __webpack_public_path__ + \"static/media/loading.701d0039.gif\";","module.exports = __webpack_public_path__ + \"static/media/trap.b9f44fbc.png\";","module.exports = __webpack_public_path__ + \"static/media/spell.43a411c3.png\";","module.exports = __webpack_public_path__ + \"static/media/light.c20c79f1.png\";","module.exports = __webpack_public_path__ + \"static/media/dark.3aeeaf15.png\";","module.exports = __webpack_public_path__ + \"static/media/water.d5c4c80d.png\";","module.exports = __webpack_public_path__ + \"static/media/fire.40ba053a.png\";","module.exports = __webpack_public_path__ + \"static/media/earth.62d55c6e.png\";","module.exports = __webpack_public_path__ + \"static/media/wind.81511560.png\";","module.exports = __webpack_public_path__ + \"static/media/divine.9ab48c19.png\";","module.exports = __webpack_public_path__ + \"static/media/level.beaaaefa.png\";","module.exports = __webpack_public_path__ + \"static/media/rank.398d0f38.png\";","module.exports = __webpack_public_path__ + \"static/media/continuous.a926716b.png\";","module.exports = __webpack_public_path__ + \"static/media/counter.7dadfe55.png\";","module.exports = __webpack_public_path__ + \"static/media/equip.b3d30153.png\";","module.exports = __webpack_public_path__ + \"static/media/field.083dec73.png\";","module.exports = __webpack_public_path__ + \"static/media/quick-play.bbb3c45e.png\";","module.exports = __webpack_public_path__ + \"static/media/ritual.379b89d7.png\";","module.exports = __webpack_public_path__ + \"static/media/aqua.c42179b1.png\";","module.exports = __webpack_public_path__ + \"static/media/dinosaur.37495362.png\";","module.exports = __webpack_public_path__ + \"static/media/divine-beast.99d145c4.png\";","module.exports = __webpack_public_path__ + \"static/media/dragon.b1284ae7.png\";","module.exports = __webpack_public_path__ + \"static/media/fairy.bf1e9dd0.png\";","module.exports = __webpack_public_path__ + \"static/media/fiend.63e2f933.png\";","module.exports = __webpack_public_path__ + \"static/media/fish.29cda041.png\";","module.exports = __webpack_public_path__ + \"static/media/insect.488b4a83.png\";","module.exports = __webpack_public_path__ + \"static/media/machine.1956bcbe.png\";","module.exports = __webpack_public_path__ + \"static/media/plant.4afd10b6.png\";","module.exports = __webpack_public_path__ + \"static/media/psychic.b610785c.png\";","module.exports = __webpack_public_path__ + \"static/media/pyro.50943f91.png\";","module.exports = __webpack_public_path__ + \"static/media/reptile.3923f55b.png\";","module.exports = __webpack_public_path__ + \"static/media/rock.b971b15d.png\";","module.exports = __webpack_public_path__ + \"static/media/sea-serpent.25d19ec8.png\";","module.exports = __webpack_public_path__ + \"static/media/spellcaster.1c3ba01b.png\";","module.exports = __webpack_public_path__ + \"static/media/thunder.ff516188.png\";","module.exports = __webpack_public_path__ + \"static/media/warrior.c37cd1e1.png\";","module.exports = __webpack_public_path__ + \"static/media/winged-beast.92af7621.png\";","module.exports = __webpack_public_path__ + \"static/media/zombie.dbc8ac93.png\";","module.exports = __webpack_public_path__ + \"static/media/scale.5d7676ee.png\";","import React, { useCallback } from 'react';\nimport { Link } from 'react-router-dom';\nimport NavBar from 'react-bootstrap/Navbar';\nimport Nav from 'react-bootstrap/Nav';\nimport Container from 'react-bootstrap/Container';\nimport Form from 'react-bootstrap/Form';\nimport FormControl from 'react-bootstrap/FormControl';\nimport InputGroup from 'react-bootstrap/InputGroup';\nimport debounce from 'lodash/debounce';\nimport logo from '../../assets/logo.png'\n\nconst NavigationBar = ({ searchFn }) => {\n  const debouncedSearch = useCallback(debounce(term => searchFn(term), 1000), []);\n\n  return (  \n    <div>            \n      <NavBar collapseOnSelect bg=\"dark\" variant=\"dark\" expand=\"lg\" fixed=\"top\">\n        <Container>\n          <NavBar.Brand as={Link} to=\"/cards\">\n            <img src={logo} height=\"50\"/>\n          </NavBar.Brand>\n          <NavBar.Toggle></NavBar.Toggle>\n          <NavBar.Collapse>\n            <Nav className=\"ml-auto\">\n              <Nav.Link as={Link} to=\"/ygo-db/card-search\" className=\"ml-5\">Card Search</Nav.Link>\n              <Nav.Link as={Link} to=\"/ygo-db/decks\" className=\"ml-5\">Decks</Nav.Link>\n              <Nav.Link as={Link} to=\"/ygo-db/sets\" className=\"ml-5\">Sets</Nav.Link>\n              <Nav.Link as={Link} to=\"/ygo-db/archetypes\" className=\"ml-5\">Archetypes</Nav.Link>\n              <Nav.Link as={Link} to=\"/ygo-db/deck-builder\" className=\"ml-5\">Deck Builder</Nav.Link>\n            </Nav>\n            {/* <Form>\n              <InputGroup>\n                <InputGroup.Prepend>\n                  <InputGroup.Text variant=\"primary\"><i className=\"fa fa-search\"></i></InputGroup.Text>\n                </InputGroup.Prepend>\n                <FormControl type=\"text\" placeholder=\"Search Cards\" className=\"mr-2\" onChange={e => debouncedSearch(e.target.value)}></FormControl>\n              </InputGroup>\n            </Form> */}\n          </NavBar.Collapse>\n        </Container>\n      </NavBar>\n    </div>\n  );\n};\n\nexport default NavigationBar;\n","import React from 'react';\nimport Navbar from 'react-bootstrap/Navbar';\nimport Container from 'react-bootstrap/Container';\nimport GitInfo from 'react-git-info/macro'\n\nconst Footer = () => {\n  const gitInfo = GitInfo();\n\n  return (\n    <>\n      <Navbar bg=\"dark\" variant=\"dark\" className=\"mt-3 p-1\">\n        <Container className=\"d-flex\">\n          <small>{`Version: ${gitInfo.commit.shortHash} (${gitInfo.branch})`}</small>\n          <small className=\"ml-auto\">{`Last Updated Date: ${new Date(gitInfo.commit.date).toLocaleDateString()}`}</small>\n        </Container>\n      </Navbar>\n    </>\n  );\n};\n\nexport default Footer;\n","import axios from 'axios';\nimport * as _ from 'lodash';\n\nconst resolveUrl = (entity) => {\n  return `https://db.ygoprodeck.com/api/v7/${entity}.php`;\n};\n\nconst cardsUrl = resolveUrl('cardinfo');\n\nconst archetypesUrl = resolveUrl('archetypes');\n\nconst cardSetsUrl = resolveUrl('cardsets');\n\nexport const searchCards = (params, pageInfo) => {\n  return axios.get(cardsUrl, fixParams(params, pageInfo));\n};\n\nexport const fetchArchetypes = () => {\n  return axios.get(archetypesUrl);\n};\n\nexport const fetchCardSets = () => {\n  return axios.get(cardSetsUrl);\n};\n\nconst fixParams = (params, pageInfo) => {\n  const processedPageInfo = {\n    num: (pageInfo.size).toString(),\n    offset: ((pageInfo.page - 1) * pageInfo.size).toString()\n  };\n\n  const combinedParams = {\n    ...params,\n    ...processedPageInfo\n  };\n\n  const cleanParams = { params: _.pickBy(combinedParams) };\n\n  return cleanParams;\n};","import React from 'react';\nimport Card from 'react-bootstrap/Card';\nimport Image from 'react-bootstrap/Image';\nimport loadingGif from '../../assets/loading.gif';\n\nconst Loading = () => {\n  return (\n    <>\n      <Card className=\"text-center\" body>\n        <Image src={loadingGif}></Image>\n        <h2 className=\"mt-4\">Loading.....</h2>\n      </Card>\n    </>\n  );\n};\n\nexport default Loading;\n","import React from 'react';\n\nconst CardSearchContext = React.createContext({});\n\nexport default CardSearchContext;","import TRAP from '../assets/trap.png';\nimport SPELL from '../assets/spell.png';\nimport LIGHT from '../assets/light.png';\nimport DARK from '../assets/dark.png';\nimport WATER from '../assets/water.png';\nimport FIRE from '../assets/fire.png';\nimport EARTH from '../assets/earth.png';\nimport WIND from '../assets/wind.png';\nimport DIVINE from '../assets/divine.png';\nimport level from '../assets/level.png';\nimport rank from '../assets/rank.png';\nimport Continuous from '../assets/continuous.png';\nimport Counter from '../assets/counter.png';\nimport Equip from '../assets/equip.png';\nimport Field from '../assets/field.png';\nimport QuickPlay from '../assets/quick-play.png';\nimport Ritual from '../assets/ritual.png';\nimport Aqua from '../assets/aqua.png';\nimport Beast from '../assets/beast.png';\nimport BeastWarrior from '../assets/beast.png';\nimport Dinosaur from '../assets/dinosaur.png';\nimport DivineBeast from '../assets/divine-beast.png';\nimport Dragon from '../assets/dragon.png';\nimport Fairy from '../assets/fairy.png';\nimport Fiend from '../assets/fiend.png';\nimport Fish from '../assets/fish.png';\nimport Insect from '../assets/insect.png';\nimport Machine from '../assets/machine.png';\nimport Plant from '../assets/plant.png';\nimport Psychic from '../assets/psychic.png';\nimport Pyro from '../assets/pyro.png';\nimport Reptile from '../assets/reptile.png';\nimport Rock from '../assets/rock.png';\nimport SeaSerpent from '../assets/sea-serpent.png';\nimport Spellcaster from '../assets/spellcaster.png';\nimport Thunder from '../assets/thunder.png';\nimport Warrior from '../assets/warrior.png';\nimport WingedBeast from '../assets/winged-beast.png';\nimport Zombie from '../assets/zombie.png';\nimport scale from '../assets/scale.png';\n\nconst Icons = {\n  attributeIcons: {\n    TRAP, SPELL, LIGHT, DARK, WATER, FIRE, EARTH, WIND, DIVINE\n  },\n  levels: {\n    level, rank\n  },\n  spellOrTrapTypes: {\n    Continuous, Counter, Equip, Field, 'Quick-Play': QuickPlay, Ritual\n  },\n  monsterTypes: {\n    Aqua, Beast, 'Beast-Warrior': BeastWarrior, Dinosaur, 'Divine-Beast': DivineBeast, Dragon, Fairy, Fiend, \n    Fish, Insect, Machine, Plant, Psychic, Pyro, Reptile, Rock, 'Sea-Serpent': SeaSerpent,\n    Spellcaster, Thunder, Warrior, 'Winged Beast': WingedBeast, Zombie\n  },\n  scale\n};\n\nexport default Icons;","import React from 'react';\nimport Image from 'react-bootstrap/Image';\nimport Icons from '../../utils/iconUtils';\n\nconst CardDetails = ({ card }) => {\n  const isMonster = card.type.includes(\"Monster\");\n\n  const attributeIcon = ['Spell Card', 'Trap Card'].includes(card.type) ? card.type.split(' ')[0].toUpperCase() : card.attribute;\n  const spellOrTrapType = !isMonster ? card.race : null;\n  const level = ['Normal Monster', 'Effect Monster', 'Synchro Monster'].includes(card.type) ? card.level : null;\n  const rank = ['XYZ Monster'].includes(card.type) ? card.level : null;\n  const link = card.linkval;\n  const category = isMonster ? `[ ${card.race} / ${card.type.split(' ')[0]} ]` : null;\n  const atk = card.atk;\n  const def = card.type.includes('Link') ? '-' : card.def;\n\n  const DetailItem = ({text, icon}) => {\n    return (\n      <div className=\"d-flex align-content-center border-right pr-2 mr-2\">\n        {icon ? <Image src={icon} height={18} width={18} className=\"my-auto mr-1 d-none d-sm-none d-md-block\" /> : null}\n        <strong>{text}</strong>\n      </div>\n    );\n  };\n\n  return (\n    <div className=\"d-flex flex-wrap\">\n      {attributeIcon   ? <DetailItem text={attributeIcon} icon={Icons.attributeIcons[attributeIcon]} /> : null}\n      {spellOrTrapType ? <DetailItem text={spellOrTrapType} icon={Icons.spellOrTrapTypes[spellOrTrapType]} /> : null}\n      {level           ? <DetailItem text={`Level ${level}`} icon={Icons.levels.level} /> : null}\n      {rank            ? <DetailItem text={`Rank ${rank}`} icon={Icons.levels.rank} /> : null}\n      {link            ? <DetailItem text={`Link ${link}`} /> : null}\n      {category        ? <DetailItem text={category} icon={Icons.monsterTypes[card.race]} /> : null}\n      {atk != null     ? <DetailItem text={`ATK ${atk}`} /> : null}\n      {def != null     ? <DetailItem text={`DEF ${def}`} /> : null}\n    </div>\n  );\n};\n\nexport default CardDetails;","import React, { useState } from 'react';\nimport Card from 'react-bootstrap/Card';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Image from 'react-bootstrap/Image';\nimport cardBack from '../../assets/card-back.png';\nimport Icons from '../../utils/iconUtils';\nimport CardDetails from '../CardDetails';\n \nconst CardGallery = ({ cards }) => {\n  return (\n    <>\n      {cards.map(card => <CardGalleryItem card={card} key={card.id} />)}\n    </>\n  );\n};\n\nconst CardGalleryItem = ({ card }) => {\n  return (\n    <>\n      <Card body className=\"secondary-bg\">\n        <Row>\n          <Col sm={12} md={3}>\n            <div className=\"mb-3 mb-md-0\">\n              <CardImage src={card?.card_images[0]?.image_url} height=\"250\" onClick={() => console.log('Clicked...')} />\n            </div>\n          </Col>\n          <Col sm={12} md={9}>\n            <div className=\"d-flex space-between\">\n              <h5><strong>{card.name}</strong></h5>\n              <span className=\"ml-auto font-italic\">{card.archetype}</span>\n            </div>\n\n            <hr className=\"border-top my-1\" />\n\n            <CardDetails card={card} />\n\n            <hr className=\"border-top my-1\" /> \n\n            {card.type.includes('Pendulum')\n              ? <>\n                  <div className=\"d-flex\">\n                    <div className=\"d-flex border-right px-2 mr-2\">\n                      <Image src={Icons.scale} className=\"my-auto mr-2\" height={20} width={25}></Image>\n                      <strong className=\"my-auto\">{card.scale}</strong>\n                    </div>\n                    <div>\n                      {card.desc.includes('[ Pendulum Effect ]')\n                        ? <p className=\"mb-0\">{card.desc.split('[ Pendulum Effect ]')[1].split('----')[0].trim()}</p>\n                        : null\n                      }\n                    </div>\n                  </div>\n\n                  <hr className=\"border-top my-1\" /> \n\n                  {card.desc.includes('[ Monster Effect ]')\n                    ? <p className=\"mb-0\" >{card.desc.split('[ Monster Effect ]')[1].trim()}</p>\n                    : null\n                  }\n\n                  {card.desc.includes('[ Flavor Text ]')\n                    ? <p className=\"mb-0\" >{card.desc.split('[ Flavor Text ]')[1].trim()}</p>\n                    : null\n                  }\n                </>\n              : <p className=\"mb-0\">{card.desc}</p>\n            }\n\n            {/* <hr className=\"border-top my-1\" /> \n            {JSON.stringify(card)} */}\n          </Col>\n        </Row>\n      </Card>\n    </>  \n  );\n};\n\nconst CardImage = ({ src, height, onClick }) => {\n  const [loaded, setLoaded] = useState(false);\n\n  return (\n    <>\n      {loaded\n        ? null\n        : <Image src={cardBack} height={height} className=\"container-fluid p-0 h-auto\"></Image>\n      }\n      <Image src={src} \n        onClick={onClick} \n        onLoad={() => setLoaded(true)}\n        className=\"container-fluid p-0 h-auto\"\n        style= {{ display: loaded ? '' : 'none', cursor: 'pointer' }}/>\n    </>  \n  );\n};\n\nexport default CardGallery;\n","import React from 'react';\nimport './cardList.css';\nimport Card from 'react-bootstrap/Card';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport CardDetails from '../CardDetails';\nimport { Link } from 'react-router-dom';\n\nconst CardList = ({ cards }) => {\n  return (\n    <>\n      {cards.map(card => <CardListItem card={card} />)}\n    </>\n  );\n};\n\nconst CardListItem = ({ card }) => {\n  return (\n    <>\n      <Card body className={card.type.replace(' ', '-')}>\n        <Row>\n          <Col md={4}>\n            <strong as={Link}>{card.name}</strong> \n          </Col>\n          <Col md={8}>\n            <CardDetails card={card} />\n          </Col>\n        </Row>\n      </Card>\n    </>\n  );\n};\n\nexport default CardList;\n","import React, { useState } from 'react';\nimport cardBack from '../../assets/card-back.png';\nimport Image from 'react-bootstrap/Image';\n\nconst CardImage = ({ src, height, onClick }) => {\n  const [loaded, setLoaded] = useState(false);\n\n  return (\n    <>\n      {loaded\n        ? null\n        : <Image src={cardBack} height={height} className=\"container-fluid p-0 h-auto\"></Image>\n      }\n      <Image src={src} \n        onClick={onClick} \n        onLoad={() => setLoaded(true)}\n        className=\"container-fluid p-0 h-auto\"\n        style= {{ display: loaded ? '' : 'none', cursor: 'pointer' }}/>\n    </>  \n  );\n};\n\nexport default CardImage;\n","import React from 'react';\nimport CardImage from '../CardImage';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\n\nconst CardGrid = ({ cards }) => {\n  return (\n    <>\n      <Row className=\"p-2\">\n        {cards.map(card => (\n          <Col sm={6} md={3} lg={2}>\n            <div className=\"p-2\">\n              <CardImage src={card?.card_images[0]?.image_url} height=\"250\" onClick={() => console.log('Clicked...')} />\n            </div>\n          </Col>\n        ))}\n      </Row>\n    </>\n  );\n};\n\nexport default CardGrid;\n","import React, { useContext } from 'react';\nimport CardSearchContext from '../context/CardSearchContext';\n\nconst ResultInfo = () => {\n  const { pageInfo, searchResults } = useContext(CardSearchContext);\n\n  const endPage = Math.min(pageInfo.page * pageInfo.size, searchResults.meta.total_rows);\n  const startPage = Math.max(endPage - pageInfo.size + 1, 1);\n\n  return (\n    <>\n      <div className=\"mb-3 mb-sm-3 mb-md-0\">\n        <strong>Search Results: {startPage} - {endPage} of {searchResults.meta.total_rows}</strong>\n      </div>\n    </>\n  )\n};\n\nexport default ResultInfo;\n","import React from 'react';\nimport Form from 'react-bootstrap/Form';\n\nconst ParamsSelect = ({label, name, value, options, grouped, onChange, display}) => {\n  const displayOption = (option) => {\n    return display ? display(option) : option;\n  }\n\n  return (\n    <>\n      <Form.Group className=\"mb-md-0\">\n        {label ? <Form.Label className=\"small\">{label}</Form.Label> : null}\n        <Form.Control as=\"select\" size=\"sm\" name={name} value={value} onChange={onChange}>\n          <option value=\"\">ALL</option>\n          {grouped\n            ? <>\n                {Object.keys(options).map(key => (\n                  <optgroup label={key} key={key}>\n                    {options[key].map(option => <option value={option} key={option}>{displayOption(option)}</option>)}\n                  </optgroup>\n                ))}\n              </>\n            : <>\n                {options.map(option => <option value={option} key={option}>{displayOption(option)}</option>)} \n              </> \n          }\n        </Form.Control>\n      </Form.Group>\n    </>\n  );\n};\n\nexport default ParamsSelect;\n","import React, { useContext } from 'react';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport ParamsSelect from '../../../components/ParamsSelect';\nimport CardSearchContext from '../context/CardSearchContext';\n\nconst CardSearchSettings = () => {\n  const { params, setParams, pageInfo, setPageInfo, search, viewMode, setViewMode } = useContext(CardSearchContext);\n\n  const sorts = ['Newest', 'ATK', 'DEF', 'Level', 'Name', 'Views', 'TCG Release', 'OCG Release'];\n\n  const pages = [10, 50, 100];\n\n  const views = ['Gallery', 'List', 'Grid'];\n\n  const onSort = (e) => {\n    const update = { ...params, sort: e.target.value };\n    setParams(update);\n    search(update, pageInfo);\n  }\n\n  const onSelectPageSize = (e) => {\n    const update = { ...pageInfo, size: e.target.value, page: 1 };\n    setPageInfo(update);\n    search(params, update);\n  }\n\n  const onSelectView = (e) => {\n    setViewMode(e.target.value);\n  };\n\n  return (\n    <>\n      <Row>\n        <Col sm={12} md={4}>\n          <ParamsSelect name=\"sort\" value={params.sort} options={sorts} onChange={onSort} display={sort => `Sort by ${sort}`} />\n        </Col>\n        <Col sm={12} md={4}>\n          <ParamsSelect name=\"num\" value={pageInfo.size} options={pages} onChange={onSelectPageSize} display={page => `Show ${page} items per page`} />\n        </Col>\n        <Col sm={12} md={4}>\n          <ParamsSelect name=\"view\" value={viewMode} options={views} onChange={onSelectView} display={view => `View as ${view}`} />\n        </Col>\n      </Row>\n    </>\n  )\n};\n\nexport default CardSearchSettings;\n","import React, { useContext } from 'react';\nimport Pagination from 'react-bootstrap/Pagination';\nimport CardSearchContext from '../context/CardSearchContext';\n\nconst CardSearchPagination = () => {\n  const { params, pageInfo, setPageInfo, search, searchResults } = useContext(CardSearchContext);\n\n  const firstPage = 1;\n\n  const lastPage = searchResults.meta.total_pages + 1;\n\n  const pages = Array(Math.min(5, lastPage)).fill(1).map((val, index) => val + index);\n\n  const paginate = (page) => {\n    const update = { ...pageInfo, page };\n    setPageInfo(update);\n    search(params, update);\n  };\n\n  return (\n    <>\n      <Pagination className=\"m-0\">\n        <Pagination.First onClick={() => paginate(firstPage)} disabled={pageInfo.page === firstPage} />\n        <Pagination.Prev onClick={() => paginate(pageInfo.page - 1)} disabled={pageInfo.page === firstPage} />\n\n        {pages\n          .map( page => (page + Math.max(pageInfo.page - pages.length, 0)) )\n          .map(page => (<Pagination.Item key={page} active={pageInfo.page === page} onClick={() => paginate(page)}>{page}</Pagination.Item>))\n        }\n\n        <Pagination.Next onClick={() => paginate(pageInfo.page + 1)} disabled={pageInfo.page === lastPage} />\n        <Pagination.Last onClick={() => paginate(lastPage)} disabled={pageInfo.page === lastPage} />\n      </Pagination>\n    </>\n  );\n};\n\nexport default CardSearchPagination;\n","import React, { useState, useEffect, useContext } from 'react';\nimport { fetchCardSets, fetchArchetypes } from '../../../service/ygodatabaseservice';\nimport Card from 'react-bootstrap/Card';\nimport Form from 'react-bootstrap/Form';\nimport InputGroup from 'react-bootstrap/InputGroup';\nimport Button from 'react-bootstrap/Button';\nimport FormControl from 'react-bootstrap/FormControl';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport ParamsSelect from '../../../components/ParamsSelect';\nimport CardSearchContext from '../context/CardSearchContext';\n\nconst CardSearchForm = () => {\n  const {params, setParams, pageInfo, setPageInfo, search} = useContext(CardSearchContext);\n\n  const [value, setValue] = useState({ ...params });\n  const [archetypes, setArchetypes] = useState([]);\n  const [cardSets, setCardSets] = useState([]);\n\n  useEffect(() => {\n    fetchArchetypes().then(res => setArchetypes(res.data));\n    fetchCardSets().then(res => setCardSets(res.data));\n  }, []);\n\n  const types = {\n    Main: [\n      'Effect Monster', 'Flip Effect Monster', 'Flip Tuner Effect Monster', 'Gemini Monster',\n      'Normal Monster', 'Normal Tuner Monster', 'Pendulum Effect Monster', 'Pendulum Flip Effect Monster',\n      'Pendulum Normal Monster', 'Pendulum Tuner Effect Monster', 'Ritual Effect Monster',\n      'Skill Card', 'Spell Card', 'Spirit Monster', 'Toon Monster', 'Trap Card', 'Tuner Monster',\n      'Union Effect Monster'\n    ],\n    Extra: [\n      'Fusion Monster', 'Link Monster', 'Pendulum Effect Fusion Monster', 'Synchro Monster',\n      'Synchro Pendulum Effect Monster', 'Synchro Tuner Monster', 'XYZ Monster',\n      'XYZ Pendulum Effect Monster'\n    ]\n  };\n\n  const races = {\n    Monster: [\n      'Aqua', 'Beast', 'Beast-warrior', 'Creator-God', 'Cyberse', 'Dinosaur', 'Divine-Beast',\n      'Dragon', 'Fairy', 'Fiend', 'Fish', 'Insect', 'Machine', 'Plant', 'Psychic', 'Pyro', 'Reptile',\n      'Rock', 'Sea Serpent', 'Spellcaster', 'Thunder', 'Warrior', 'Winged Beast', 'Zombie'\n    ],\n    Spell: ['Normal', 'Field', 'Equip', 'Continous', 'Quick-Play', 'Ritual'],\n    Trap: ['Normal', 'Continous', 'Counter']\n  };\n\n  const attributes = ['DARK', 'EARTH', 'FIRE', 'LIGHT', 'WATER', 'WIND', 'DIVINE'];\n\n  const effects = [\n    'Back to Deck', 'Back to Hand', 'Banish', 'Change ATK or DEF', 'Control',\n    'Counter', 'Damage LP', 'Destroy Monster', 'Direct Attack', 'Draw', 'Effect Damage',\n    'Fusion-Related', 'Gamble', 'Graveyard', 'Increase Level', 'LINK-Related', 'Negate', 'Pendulum-Related',\n    'Piercing', 'Recover LP', 'Repeat Attack', 'Ritual-Related', 'Search', 'Select', 'Special Summon',\n    'Synchro-Related', 'Token', 'Tuner-Related', 'Win the Duel', 'XYZ-Related'\n  ];\n\n  const banLists = ['TCG', 'OCG', 'Goat'];\n\n  const formats = ['Duel Links', 'Speed Duel', 'Rush Duel', 'GOAT', 'OCG GOAT'];\n\n  const rarities = [\n    'Common', 'Collector\\'s Rare', 'Duel Terminal Normal Parallel', 'Duel Terminal Normal Rare Parallel Rare',\n    'Duel Terminal Super Parallel Rare', 'Duel Terminal Ultra Parallel Rare', 'Extra Secret Rare', 'Ghost Rare',\n    'Ghost/Gold Rare', 'Gold Rare', 'Gold Secret Rare', 'Mosaic Rare', 'Normal Parallel Rare', 'Platinum Rare',\n    'Platinum Secret Rare', 'Prismatic Secret Rare', 'Rare', 'Secret Rare', 'Shatterfoil Rare', 'Short Print',\n    'Starfoil Rare', 'Super Rare', 'Super Short Print', 'Ultimate Rare', 'Ultra Parallel Rare', 'Ultra Rare',\n    'Ultra Secret Rare'\n  ];\n\n  const linkMarkers = ['Top', 'Top-Left', 'Top-Right', 'Left', 'Right', 'Bottom', 'Bottom-Left', 'Bottom-Right'];\n\n  const onChange = (e) => {\n    const update = {...params, [e.target.name]: e.target.value};\n    setValue(update);\n  };\n\n  const onSearch = () => {\n    const pageInfoUpdate = { ...pageInfo, page: 1 }\n    setPageInfo(pageInfoUpdate);\n    setParams(value);\n    search(value, pageInfoUpdate);\n  };\n\n  const onEnter = (e) => {\n    if (e.key === 'Enter') {\n      onSearch();\n    }\n  };\n\n  return (\n    <div>\n      <Card>\n        <Card.Header>\n          <Row>\n            <Col sm={12} md={10}>\n              <Form.Group className=\"mb-md-0\">\n                <InputGroup size=\"md\">\n                  <InputGroup.Prepend>\n                    <InputGroup.Text variant=\"primary\"><i className=\"fa fa-search\"></i></InputGroup.Text>\n                  </InputGroup.Prepend>\n                  <FormControl type=\"text\" placeholder=\"Search Cards\" name=\"fname\" value={value.fname} onChange={onChange} onKeyPress={onEnter}></FormControl>\n                </InputGroup>\n              </Form.Group>\n            </Col>\n            <Col sm={12} md={2}>\n              <Button block onClick={onSearch}>Search</Button>\n            </Col>\n          </Row>\n        </Card.Header>\n        <Card.Body>\n          <Row>\n            <Col sm={6} md={4}>\n              <ParamsSelect label=\"Card Type\" name=\"type\" value={value.type} options={types} onChange={onChange} grouped />\n            </Col>\n            <Col sm={6} md={4}>\n              <ParamsSelect label=\"Race\" name=\"race\" value={value.race} options={races} onChange={onChange} grouped />\n            </Col>\n            <Col sm={6} md={4}>\n              <ParamsSelect label=\"Attribute\" name=\"attribute\" value={value.attribute} options={attributes} onChange={onChange} />\n            </Col>\n            <Col sm={6} md={4}>\n              <ParamsSelect label=\"Card Effect\" name=\"effect\" value={value.effect} options={effects} onChange={onChange} />\n            </Col>\n            <Col sm={6} md={4}>\n              <ParamsSelect label=\"Ban List\" name=\"banList\" value={value.banList} options={banLists} onChange={onChange} />\n            </Col>\n            <Col sm={6} md={4}>\n              <ParamsSelect label=\"Format\" name=\"format\" value={value.formats} options={formats} onChange={onChange} />\n            </Col>\n            <Col sm={6} md={4}>\n              <ParamsSelect label=\"Archetype\" name=\"archetype\" value={value.archetype} options={archetypes.map(item => item.archetype_name)} onChange={onChange} />\n            </Col>\n            <Col sm={6} md={4}>\n              <ParamsSelect label=\"Rarity\" name=\"rarity\" value={value.rarity} options={rarities} onChange={onChange} />\n            </Col>\n            <Col sm={6} md={4}>\n              <ParamsSelect label=\"Card Set\" name=\"cardset\" value={value.cardset} options={cardSets.map(set => set.set_name)} onChange={onChange} />\n            </Col>\n            <Col sm={6} md={4}>\n              <ParamsSelect label=\"Link Marker\" name=\"linkmarker\" value={value.linkmarker} options={linkMarkers} onChange={onChange} />\n            </Col>\n          </Row>\n        </Card.Body>  \n      </Card> \n    </div>\n  );\n};\n\nexport default CardSearchForm;\n","import React from 'react';\n\nconst NoResultsFound = () => {\n  return (\n    <div>\n      No Results Found\n    </div>\n  )\n}\n\nexport default NoResultsFound;\n","import React, { useState, useEffect } from 'react';\nimport { searchCards } from '../../service/ygodatabaseservice';\nimport Loading from '../../components/Loading';\nimport CardSearchContext from './context/CardSearchContext';\nimport Card from 'react-bootstrap/Card';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport CardGallery from '../../components/CardGallery';\nimport CardList from '../../components/CardList';\nimport CardGrid from '../../components/CardGrid';\nimport ResultInfo from './components/ResultInfo';\nimport CardSearchSettings from './components/CardSearchSettings';\nimport CardSearchPagination from './components/CardSearchPagination';\nimport CardSearchForm from './components/CardSearchForm';\nimport NoResultsFound from './components/NoResultsFound';\n\nconst CardSearch = () => {\n  const [searchResults, setSearchResults] = useState(null);\n  const [loadingResults, setLoadingResults] = useState(false);\n  const [params, setParams] = useState({\n    name: '',\n    fname: '', \n    desc: '', \n    effect: '', \n    sort: 'Name', \n    sortorder: 'asc', \n    num: '', \n    offset: '', \n    type: '', \n    atk: '', \n    def: '', \n    level: '', \n    race: '', \n    attribute: '', \n    set: '', \n    rarity: '', \n    archetype: '', \n    set: '', \n    banlist: '', \n    link: '', \n    scale: '', \n    linkmarker: '', \n    format: '', \n    staple: '', \n    misc: '', \n    includeAliased: '', \n    startdate: '', \n    enddate: '', \n    dateregion: '', \n    startprice: '', \n    endprice: '', \n    num: '', \n    offset: ''\n  });\n  const [pageInfo, setPageInfo] = useState({\n    size: 10,\n    page: 1\n  });\n  const [viewMode, setViewMode] = useState('Gallery');\n\n  useEffect(() => {\n    search(params, pageInfo);\n  }, []);\n\n  const search = (params, pageInfo) => {\n    setLoadingResults(true);\n    searchCards(params, pageInfo)\n      .then(res => setSearchResults(res.data))\n      .catch(err => setSearchResults(null))\n      .finally(() => setLoadingResults(false));\n  };\n\n  const CardView = ({ viewMode, cards }) => {\n    switch (viewMode) {\n      case 'Gallery' : return <CardGallery cards={cards} />;\n      case 'List'    : return <CardList cards={cards} />;\n      case 'Grid'    : return <CardGrid cards={cards} />;\n      default        : return null;\n    }\n  };\n\n  return (\n    <>\n      <CardSearchContext.Provider value={{ params, setParams, pageInfo, setPageInfo, search, searchResults, viewMode, setViewMode }}>\n        <CardSearchForm />\n\n        <div className=\"mt-3\"></div>\n\n        {searchResults\n          ? <Card>\n              <Card.Header>\n                <Row>\n                  <Col sm={12} md={4}>\n                    <ResultInfo />\n                  </Col>\n                  <Col sm={12} md={8}>\n                    <CardSearchSettings />\n                  </Col>\n                </Row>\n              </Card.Header>\n              <Card.Footer className=\"d-flex justify-content-center\">\n                <CardSearchPagination />\n              </Card.Footer> \n              <Card.Body className=\"p-0\">\n                {loadingResults \n                  ? <Loading /> \n                  : <CardView viewMode={viewMode} cards={searchResults.data} />\n                }\n              </Card.Body> \n              <Card.Footer className=\"d-flex justify-content-center\">\n                <CardSearchPagination />\n              </Card.Footer> \n            </Card>\n          : <Card body>\n              <NoResultsFound />\n            </Card> \n        }\n      </CardSearchContext.Provider>\n    </>\n  );\n};\n\nexport default CardSearch;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nconst PageNotFound = () => {\n  return (\n    <div className=\"text-center mt-4 vh-100\">\n      <h2>404</h2>\n      <p>Page Not Found</p>\n      <Link to=\"/ygo-db\">HOME</Link>\n    </div>\n  );\n};\n\nexport default PageNotFound;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nconst InProgressPage = () => {\n  return (\n    <div className=\"text-center mt-4 vh-100\">\n      <h2>In Progress</h2>\n      <p>Coming Soon</p>\n      <Link to=\"/ygo-db\">HOME</Link>\n    </div>\n  );\n};\n\nexport default InProgressPage;\n","import React, { useState, useEffect } from 'react';\nimport './App.css';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\nimport NavigationBar from './components/NavigationBar';\nimport Footer from './components/Footer';\nimport Container from 'react-bootstrap/Container';\nimport CardSearch from './routes/CardSearch';\nimport PageNotFound from './routes/PageNotFound';\nimport InProgressPage from './routes/InProgressPage';\n\nfunction App() {\n  return (\n    <>\n      <BrowserRouter>\n        <div>\n          <NavigationBar searchFn={() => {}} />\n          <div style={{height: 110}}></div>\n          <Container className=\"h-100\">\n            <Switch>\n              <Route path=\"/ygo-db\" exact>\n                <CardSearch />\n              </Route>\n              <Route path=\"/ygo-db/card-search\">\n                <CardSearch />\n              </Route>\n              <Route path=\"/ygo-db/decks\">\n                <InProgressPage />\n              </Route>\n              <Route path=\"/ygo-db/sets\">\n                <InProgressPage />\n              </Route>\n              <Route path=\"/ygo-db/archetypes\">\n                <InProgressPage />\n              </Route>\n              <Route path=\"/ygo-db/deck-builder\">\n                <InProgressPage />\n              </Route>\n              <Route path=\"*\">\n                <PageNotFound />\n              </Route>\n            </Switch>\n          </Container>\n          <Footer />\n        </div>\n      </BrowserRouter>\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport './assets/theme.min.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}