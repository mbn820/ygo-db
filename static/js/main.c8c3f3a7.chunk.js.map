{"version":3,"sources":["components/NavigationBar.js","components/Footer.js","components/ParamsSelect.js","context/CardSearchContext.js","components/CardSearchForm.js","components/CardGallery.js","components/CardSearchSettings.js","components/CardSearchPagination.js","components/CardSearchResults.js","components/Loading.js","routes/CardSearch.js","routes/PageNotFound.js","routes/InProgressPage.js","App.js","serviceWorker.js","index.js","assets/logo.png","assets/card-back.png","assets/loading.gif"],"names":["NavigationBar","searchFn","useCallback","debounce","term","collapseOnSelect","bg","variant","expand","fixed","Container","Brand","as","Link","to","src","logo","height","Toggle","Collapse","Nav","className","Footer","gitInfo","Navbar","commit","shortHash","branch","Date","date","toLocaleDateString","ParamsSelect","label","name","value","options","grouped","onChange","display","displayOption","option","Form","Group","Label","Control","size","Object","keys","map","key","CardSearchContext","React","createContext","CardSearchForm","useContext","params","setParams","pageInfo","setPageInfo","search","e","update","target","Card","Header","Row","Col","sm","md","InputGroup","Prepend","Text","FormControl","type","placeholder","fname","Button","block","onClick","pageInfoUpdate","page","Body","Main","Extra","race","Monster","Spell","Trap","attribute","cardEffect","banList","formats","rarity","cardSet","linkArrow","CardGalleryItem","card","body","card_images","image_url","console","log","archetype","desc","CardImage","useState","loaded","setLoaded","Image","cardBack","onLoad","style","cursor","CardDetails","isMonster","includes","attributeIcon","split","toUpperCase","spellOrTrapType","level","rank","link","linkval","category","atk","def","CardGallery","cards","id","CardSearchSettings","sort","view","CardSearchPagination","meta","lastPage","total_pages","pages","Array","Math","min","fill","val","index","paginate","Pagination","First","disabled","Prev","max","length","Item","active","Next","Last","CardSearchResults","searchResults","data","endPage","total_rows","startPage","Loading","loadingGif","CardSearch","setSearchResults","loadingResults","setLoadingResults","format","useEffect","processedPageInfo","num","toString","offset","combinedParams","cleanParams","_","JSON","stringify","axios","get","then","res","catch","err","finally","Provider","PageNotFound","InProgressPage","App","path","exact","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message","module","exports"],"mappings":"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","file":"static/js/main.c8c3f3a7.chunk.js","sourcesContent":["import React, { useCallback } from 'react';\nimport { Link } from 'react-router-dom';\nimport NavBar from 'react-bootstrap/Navbar';\nimport Nav from 'react-bootstrap/Nav';\nimport Container from 'react-bootstrap/Container';\nimport Form from 'react-bootstrap/Form';\nimport FormControl from 'react-bootstrap/FormControl';\nimport InputGroup from 'react-bootstrap/InputGroup';\nimport debounce from 'lodash/debounce';\nimport logo from '../assets/logo.png'\n\nconst NavigationBar = ({ searchFn }) => {\n  const debouncedSearch = useCallback(debounce(term => searchFn(term), 1000), []);\n\n  return (  \n    <div>            \n      <NavBar collapseOnSelect bg=\"dark\" variant=\"dark\" expand=\"lg\" fixed=\"top\">\n        <Container>\n          <NavBar.Brand as={Link} to=\"/cards\">\n            <img src={logo} height=\"50\"/>\n          </NavBar.Brand>\n          <NavBar.Toggle></NavBar.Toggle>\n          <NavBar.Collapse>\n            <Nav className=\"ml-auto\">\n              <Nav.Link as={Link} to=\"/ygo-db/card-search\" className=\"ml-5\">Card Search</Nav.Link>\n              <Nav.Link as={Link} to=\"/ygo-db/decks\" className=\"ml-5\">Decks</Nav.Link>\n              <Nav.Link as={Link} to=\"/ygo-db/sets\" className=\"ml-5\">Sets</Nav.Link>\n              <Nav.Link as={Link} to=\"/ygo-db/archetypes\" className=\"ml-5\">Archetypes</Nav.Link>\n              <Nav.Link as={Link} to=\"/ygo-db/deck-builder\" className=\"ml-5\">Deck Builder</Nav.Link>\n            </Nav>\n            {/* <Form>\n              <InputGroup>\n                <InputGroup.Prepend>\n                  <InputGroup.Text variant=\"primary\"><i className=\"fa fa-search\"></i></InputGroup.Text>\n                </InputGroup.Prepend>\n                <FormControl type=\"text\" placeholder=\"Search Cards\" className=\"mr-2\" onChange={e => debouncedSearch(e.target.value)}></FormControl>\n              </InputGroup>\n            </Form> */}\n          </NavBar.Collapse>\n        </Container>\n      </NavBar>\n    </div>\n  );\n};\n\nexport default NavigationBar;\n","import React from 'react';\nimport Navbar from 'react-bootstrap/Navbar';\nimport Container from 'react-bootstrap/Container';\nimport GitInfo from 'react-git-info/macro'\n\nconst Footer = () => {\n  const gitInfo = GitInfo();\n\n  return (\n    <>\n      <Navbar bg=\"dark\" variant=\"dark\" className=\"mt-3 p-1\">\n        <Container className=\"d-flex\">\n          <small>{`Version: ${gitInfo.commit.shortHash} (${gitInfo.branch})`}</small>\n          <small className=\"ml-auto\">{`Last Updated Date: ${new Date(gitInfo.commit.date).toLocaleDateString()}`}</small>\n        </Container>\n      </Navbar>\n    </>\n  );\n};\n\nexport default Footer;\n","import React from 'react';\nimport Form from 'react-bootstrap/Form';\n\nconst ParamsSelect = ({label, name, value, options, grouped, onChange, display}) => {\n  const displayOption = (option) => {\n    return display ? display(option) : option;\n  }\n\n  return (\n    <>\n      <Form.Group className=\"mb-md-0\">\n        {label ? <Form.Label className=\"small\">{label}</Form.Label> : null}\n        <Form.Control as=\"select\" size=\"sm\" name={name} value={value} onChange={onChange}>\n          <option value=\"\">ALL</option>\n          {grouped\n            ? <>\n                {Object.keys(options).map(key => (\n                  <optgroup label={key} key={key}>\n                    {options[key].map(option => <option value={option} key={option}>{displayOption(option)}</option>)}\n                  </optgroup>\n                ))}\n              </>\n            : <>\n                {options.map(option => <option value={option} key={option}>{displayOption(option)}</option>)} \n              </> \n          }\n        </Form.Control>\n      </Form.Group>\n    </>\n  );\n};\n\nexport default ParamsSelect;\n","import React from 'react';\n\nconst CardSearchContext = React.createContext({});\n\nexport default CardSearchContext;","import React, { useState, useContext } from 'react';\nimport Card from 'react-bootstrap/Card';\nimport Form from 'react-bootstrap/Form';\nimport InputGroup from 'react-bootstrap/InputGroup';\nimport Button from 'react-bootstrap/Button';\nimport FormControl from 'react-bootstrap/FormControl';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport ParamsSelect from './ParamsSelect';\nimport CardSearchContext from '../context/CardSearchContext';\n\nconst CardSearchForm = () => {\n  const {params, setParams, pageInfo, setPageInfo, search} = useContext(CardSearchContext);\n\n  const types = {\n    Main: [\n      'Effect Monster', 'Flip Effect Monster', 'Flip Tuner Effect Monster', 'Gemini Monster',\n      'Normal Monster', 'Normal Tuner Monster', 'Pendulum Effect Monster', 'Pendulum Flip Effect Monster',\n      'Pendulum Normal Monster', 'Pendulum Tuner Effect Monster', 'Ritual Effect Monster',\n      'Skill Card', 'Spell Card', 'Spirit Monster', 'Toon Monster', 'Trap Card', 'Tuner Monster',\n      'Union Effect Monster'\n    ],\n    Extra: [\n      'Fusion Monster', 'Link Monster', 'Pendulum Effect Fusion Monster', 'Synchro Monster',\n      'Synchro  Pendulum Effect Monster', 'Synchro Tuner Monster', 'XYZ Monster',\n      'XYZ Pendulum Effect Monster'\n    ]\n  };\n\n  const races = {\n    Monster: [\n      'Aqua', 'Beast', 'Beast-warrior', 'Creator-God', 'Cyberse', 'Dinosaur', 'Divine-Beast',\n      'Dragon', 'Fairy', 'Fiend', 'Fish', 'Insect', 'Machine', 'Plant', 'Psychic', 'Pyro', 'Reptile',\n      'Rock', 'Sea Serpent', 'Spellcaster', 'Thunder', 'Warrior', 'Winged-Beast'\n    ],\n    Spell: ['Normal', 'Field', 'Equip', 'Continous', 'Quick-Play', 'Ritual'],\n    Trap: ['Normal', 'Continous', 'Counter']\n  };\n\n  const attributes = ['DARK', 'EARTH', 'FIRE', 'LIGHT', 'WATER', 'WIND', 'DIVINE'];\n\n  const cardEffects = [\n    'Back to Deck', 'Back to Hand', 'Banish', 'Change ATK or DEF', 'Control',\n    'Counter', 'Damage LP', 'Destroy Monster', 'Direct Attack', 'Draw', 'Effect Damage',\n    'Fusion-Related', 'Gamble', 'Graveyard', 'Increase Level', 'LINK-Related', 'Negate', 'Pendulum-Related',\n    'Piercing', 'Recover LP', 'Repeat Attack', 'Ritual-Related', 'Search', 'Select', 'Special Summon',\n    'Synchro-Related', 'Token', 'Tuner-Related', 'Win the Duel', 'XYZ-Related'\n  ];\n\n  const banLists = ['TCG', 'OCG', 'Goat'];\n\n  const formats = ['Duel Links', 'Speed Duel', 'Rush Duel', 'GOAT', 'OCG GOAT'];\n\n  const archetypes = [];\n\n  const rarities = [\n    'Common', 'Collector\\'s Rare'\n  ];\n\n  const cardSets = [];\n\n  const linkArrows = [];\n\n  const onChange = (e) => {\n    const update = {...params, [e.target.name]: e.target.value};\n    setParams(update);\n  };\n\n  const onSearch = () => {\n    const pageInfoUpdate = { ...pageInfo, page: 1 }\n    setPageInfo(pageInfoUpdate);\n    search(params, pageInfoUpdate);\n  }\n\n  return (\n    <div>\n      <Card>\n        <Card.Header>\n          <Row>\n            <Col sm={12} md={10}>\n              <Form.Group className=\"mb-md-0\">\n                <InputGroup size=\"md\">\n                  <InputGroup.Prepend>\n                    <InputGroup.Text variant=\"primary\"><i className=\"fa fa-search\"></i></InputGroup.Text>\n                  </InputGroup.Prepend>\n                  <FormControl type=\"text\" placeholder=\"Search Cards\" name=\"fname\" value={params.fname} onChange={onChange}></FormControl>\n                </InputGroup>\n              </Form.Group>\n            </Col>\n            <Col sm={12} md={2}>\n              <Button block onClick={onSearch}>Search</Button>\n            </Col>\n          </Row>\n        </Card.Header>\n        <Card.Body>\n          <Row>\n            <Col sm={6} md={4}>\n              <ParamsSelect label=\"Card Type\" name=\"type\" value={params.type} options={types} onChange={onChange} grouped />\n            </Col>\n            <Col sm={6} md={4}>\n              <ParamsSelect label=\"Race\" name=\"race\" value={params.race} options={races} onChange={onChange} grouped />\n            </Col>\n            <Col sm={6} md={4}>\n              <ParamsSelect label=\"Attribute\" name=\"attribute\" value={params.attribute} options={attributes} onChange={onChange} />\n            </Col>\n            <Col sm={6} md={4}>\n              <ParamsSelect label=\"Card Effect\" name=\"cardEffect\" value={params.cardEffect} options={cardEffects} onChange={onChange} />\n            </Col>\n            <Col sm={6} md={4}>\n              <ParamsSelect label=\"Ban List\" name=\"banList\" value={params.banList} options={banLists} onChange={onChange} />\n            </Col>\n            <Col sm={6} md={4}>\n              <ParamsSelect label=\"Format\" name=\"format\" value={params.formats} options={formats} onChange={onChange} />\n            </Col>\n            <Col sm={6} md={4}>\n              <ParamsSelect label=\"Rarity\" name=\"rarity\" value={params.rarity} options={rarities} onChange={onChange} />\n            </Col>\n            <Col sm={6} md={4}>\n              <ParamsSelect label=\"Card Set\" name=\"cardSet\" value={params.cardSet} options={cardSets} onChange={onChange} />\n            </Col>\n            <Col sm={6} md={4}>\n              <ParamsSelect label=\"Link Arrow\" name=\"linkArrow\" value={params.linkArrow} options={linkArrows} onChange={onChange} />\n            </Col>\n          </Row>\n        </Card.Body>  \n      </Card> \n    </div>\n  );\n};\n\nexport default CardSearchForm;\n","import React, { useState } from 'react';\nimport Card from 'react-bootstrap/Card';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Image from 'react-bootstrap/Image';\nimport cardBack from '../assets/card-back.png';\n \nconst CardGallery = ({ cards }) => {\n  return (\n    <>\n      {cards.map(card => <CardGalleryItem card={card} key={card.id} />)}\n    </>\n  );\n};\n\nconst CardGalleryItem = ({ card }) => {\n  return (\n    <>\n      <Card body className=\"border-light\">\n        <Row>\n          <Col sm={12} md={2}>\n            <div className=\"mb-3 mb-md-0\">\n              <CardImage src={card?.card_images[0]?.image_url} height=\"250\" onClick={() => console.log('Clicked...')} />\n            </div>\n          </Col>\n          <Col sm={12} md={10}>\n            <div className=\"d-flex space-between\">\n              <h5><strong>{card.name}</strong></h5>\n              <span className=\"ml-auto\">{card.archetype}</span>\n            </div>\n\n            <hr className=\"border-top my-1\" />\n\n            <CardDetails card={card} />\n\n            <hr className=\"border-top my-1\" /> \n            {/* <hr style={{ borderTop: '1px solid white', margin: '5px 0' }} /> */}\n\n            <p className=\"text-muted\">{card.desc}</p>\n            {/* <hr style={{ borderTop: '1px solid white', margin: '5px 0' }} />\n            {JSON.stringify(card)} */}\n          </Col>\n        </Row>\n      </Card>\n    </>  \n  );\n};\n\nconst CardImage = ({ src, height, onClick }) => {\n  const [loaded, setLoaded] = useState(false);\n\n  return (\n    <>\n      {loaded\n        ? null\n        : <Image src={cardBack} height={height} className=\"container-fluid p-0\"></Image>\n      }\n      <Image src={src} \n        onClick={onClick} \n        onLoad={() => setLoaded(true)}\n        className=\"container-fluid p-0\"\n        style= {{ display: loaded ? '' : 'none', cursor: 'pointer' }}/>\n    </>  \n  );\n};\n\nconst CardDetails = ({ card }) => {\n  const isMonster = card.type.includes(\"Monster\");\n\n  const attributeIcon = ['Spell Card', 'Trap Card'].includes(card.type) ? card.type.split(' ')[0].toUpperCase() : card.attribute;\n  const spellOrTrapType = !isMonster ? card.race : null;\n  const level = ['Normal Monster', 'Effect Monster', 'Synchro Monster'].includes(card.type) ? card.level : null;\n  const rank = ['XYZ Monster'].includes(card.type) ? card.level : null;\n  const link = card.linkval;\n  const category = isMonster ? `[ ${card.race} / ${card.type} ]` : null;\n  const atk = card.atk;\n  const def = card.type.includes('Link') ? '-' : card.def;\n\n  return (\n    <>\n      {attributeIcon   ? <strong className=\"border-right pr-2\">{`${attributeIcon}`}</strong> : null}\n      {spellOrTrapType ? <strong className=\"border-right px-2\">{`${spellOrTrapType}`}</strong> : null}\n      {level           ? <strong className=\"border-right px-2\">{`Level ${level}`}</strong> : null}\n      {rank            ? <strong className=\"border-right px-2\">{`Rank ${rank}`}</strong> : null}\n      {link            ? <strong className=\"border-right px-2\">{`Link ${link}`}</strong> : null}\n      {category        ? <strong className=\"border-right px-2\">{`${category}`}</strong> : null}\n      {atk != null     ? <strong className=\"border-right px-2\">{`ATK ${atk}`}</strong> : null}\n      {def != null     ? <strong className=\"border-right px-2\">{`DEF ${def}`}</strong> : null}\n    </>\n  );\n};\n\nexport default CardGallery;\n","import React, { useContext } from 'react';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport ParamsSelect from './ParamsSelect';\nimport CardSearchContext from '../context/CardSearchContext';\n\nconst CardSearchSettings = () => {\n  const { params, setParams, pageInfo, setPageInfo, search } = useContext(CardSearchContext);\n\n  const sorts = ['Newest', 'ATK', 'DEF', 'Level', 'Name', 'Views', 'TCG Release', 'OCG Release'];\n\n  const pages = [10, 50, 100];\n\n  const views = ['Gallery', 'List'];\n\n  const onSort = (e) => {\n    const update = { ...params, sort: e.target.value };\n    setParams(update);\n    search(update, pageInfo);\n  }\n\n  const onSelectPageSize = (e) => {\n    const update = { ...pageInfo, size: e.target.value };\n    setPageInfo(update);\n    search(params, update);\n  }\n\n  const onSelectView = (e) => {\n    console.log('Changing view');\n  };\n\n  return (\n    <>\n      <Row>\n        <Col sm={12} md={4}>\n          <ParamsSelect name=\"sort\" value={params.sort} options={sorts} onChange={onSort} display={sort => `Sort by ${sort}`} />\n        </Col>\n        <Col sm={12} md={4}>\n          <ParamsSelect name=\"num\" value={pageInfo.size} options={pages} onChange={onSelectPageSize} display={page => `Show ${page} items per page`} />\n        </Col>\n        <Col sm={12} md={4}>\n          <ParamsSelect name=\"view\" value={params.view} options={views} onChange={onSelectView} display={view => `View as ${view}`} />\n        </Col>\n      </Row>\n    </>\n  )\n};\n\nexport default CardSearchSettings;\n","import React, { useContext } from 'react';\nimport Pagination from 'react-bootstrap/Pagination';\nimport CardSearchContext from '../context/CardSearchContext';\n\nconst CardSearchPagination = ({ meta }) => {\n  const { params, setParams, pageInfo, setPageInfo, search } = useContext(CardSearchContext);\n\n  const firstPage = 1;\n\n  const lastPage = meta.total_pages + 1;\n\n  const pages = Array(Math.min(5, lastPage)).fill(1).map((val, index) => val + index);\n\n  const paginate = (page) => {\n    const update = { ...pageInfo, page };\n    setPageInfo(update);\n    search(params, update);\n  };\n\n  return (\n    <>\n      <Pagination className=\"m-0\">\n        <Pagination.First onClick={() => paginate(firstPage)} disabled={pageInfo.page === firstPage} />\n        <Pagination.Prev onClick={() => paginate(pageInfo.page - 1)} disabled={pageInfo.page === firstPage} />\n\n        {pages\n          .map( page => (page + Math.max(pageInfo.page - pages.length, 0)) )\n          .map(page => (<Pagination.Item key={page} active={pageInfo.page === page} onClick={() => paginate(page)}>{page}</Pagination.Item>))\n        }\n\n        <Pagination.Next onClick={() => paginate(pageInfo.page + 1)} disabled={pageInfo.page === lastPage} />\n        <Pagination.Last onClick={() => paginate(lastPage)} disabled={pageInfo.page === lastPage} />\n      </Pagination>\n    </>\n  );\n};\n\nexport default CardSearchPagination;\n","import React, { useContext } from 'react';\nimport Card from 'react-bootstrap/Card';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport CardGallery from './CardGallery';\nimport CardSearchSettings from './CardSearchSettings';\nimport CardSearchPagination from './CardSearchPagination';\nimport CardSearchContext from '../context/CardSearchContext';\n\nconst CardSearchResults = ({ searchResults }) => {\n  const {meta, data} = searchResults;\n\n  const { params, pageInfo } = useContext(CardSearchContext);\n\n  const endPage = Math.min(pageInfo.page * pageInfo.size, meta.total_rows);\n  const startPage = Math.max(endPage - pageInfo.size + 1, 1);\n\n  return (\n    <>\n      <Card>\n        <Card.Header>\n          <Row>\n            <Col sm={12} md={4}>\n              <div className=\"mb-3 mb-sm-3 mb-md-0\">\n                <strong>Search Results: {startPage} - {endPage} of {meta.total_rows}</strong>\n              </div>\n            </Col>\n            <Col sm={12} md={8}>\n              <CardSearchSettings />\n            </Col>\n          </Row>\n        </Card.Header>\n        <Card.Body className=\"\">\n          <CardGallery cards={data} />\n        </Card.Body> \n        <Card.Footer className=\"d-flex justify-content-center\">\n          <CardSearchPagination meta={meta} />\n        </Card.Footer> \n      </Card> \n    </>\n  );\n};\n\nexport default CardSearchResults;\n","import React from 'react';\nimport Card from 'react-bootstrap/Card';\nimport Image from 'react-bootstrap/Image';\nimport loadingGif from '../assets/loading.gif';\n\nconst Loading = () => {\n  return (\n    <>\n      <Card className=\"text-center\" body>\n        <Image src={loadingGif}></Image>\n        <h2 className=\"mt-4\">Loading.....</h2>\n      </Card>\n    </>\n  );\n};\n\nexport default Loading;\n","import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport CardSearchForm from '../components/CardSearchForm';\nimport CardSearchResults from '../components/CardSearchResults';\nimport Loading from '../components/Loading';\nimport * as _ from 'lodash';\nimport CardSearchContext from '../context/CardSearchContext';\n\nconst CardSearch = () => {\n  const BASE_URL = 'https://db.ygoprodeck.com/api/v7/cardinfo.php';\n  const [searchResults, setSearchResults] = useState(null);\n  const [loadingResults, setLoadingResults] = useState(false);\n  const [params, setParams] = useState({\n    sort: 'Name',\n    view: 'Gallery',\n    fname: '',\n    type: '',\n    race: '',\n    attribute: '',\n    cardEffect: '',\n    banList: '',\n    format: '',\n    archetype: '',\n    rarity: '',\n    cardSet: '',\n    linkArrow: ''\n  });\n  const [pageInfo, setPageInfo] = useState({\n    size: 10,\n    page: 1\n  });\n\n  useEffect(() => {\n    search(params, pageInfo);\n\n  }, []);\n\n  const search = (params, pageInfo) => {\n    const processedPageInfo = {\n      num: (pageInfo.size).toString(),\n      offset: ((pageInfo.page - 1) * pageInfo.size).toString()\n    };\n    const combinedParams = {\n      ...params,\n      ...processedPageInfo\n    }\n    const cleanParams = { params: _.pickBy(combinedParams) };\n    console.log(JSON.stringify({cleanParams}))\n\n    setLoadingResults(true);\n    axios.get(BASE_URL, cleanParams)\n      .then(res => setSearchResults(res.data))\n      .catch(err => setSearchResults({}))\n      .finally(() => setLoadingResults(false));\n  };\n\n  const paginate = () => {\n\n  };\n\n  return (\n    <div>\n      <CardSearchContext.Provider value={{ params, setParams, pageInfo, setPageInfo, search }}>\n        <CardSearchForm />\n        <div className=\"mt-3\"></div>\n        {loadingResults \n          ? <Loading /> \n          : searchResults ? <CardSearchResults searchResults={searchResults} /> : null\n        }\n      </CardSearchContext.Provider>\n    </div>\n  );\n};\n\nexport default CardSearch;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nconst PageNotFound = () => {\n  return (\n    <div className=\"text-center mt-4\">\n      <h2>404</h2>\n      <p>Page Not Found</p>\n      <Link to=\"/ygo-db\">HOME</Link>\n    </div>\n  );\n};\n\nexport default PageNotFound;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nconst InProgressPage = () => {\n  return (\n    <div className=\"text-center mt-4\">\n      <h2>In Progress</h2>\n      <p>Coming Soon</p>\n      <Link to=\"/ygo-db\">HOME</Link>\n    </div>\n  );\n};\n\nexport default InProgressPage;\n","import React, { useState, useEffect } from 'react';\nimport './App.css';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\nimport NavigationBar from './components/NavigationBar';\nimport Footer from './components/Footer';\nimport Container from 'react-bootstrap/Container';\nimport CardSearch from './routes/CardSearch';\nimport PageNotFound from './routes/PageNotFound';\nimport InProgressPage from './routes/InProgressPage';\n\nfunction App() {\n  return (\n    <div>\n      <BrowserRouter>\n        <NavigationBar searchFn={() => {}} />\n        <div style={{height: 110}}></div>\n        <Container>\n          <Switch>\n            <Route path=\"/ygo-db\" exact>\n              <CardSearch />\n            </Route>\n            <Route path=\"/ygo-db/card-search\">\n              <CardSearch />\n            </Route>\n            <Route path=\"/ygo-db/decks\">\n              <InProgressPage />\n            </Route>\n            <Route path=\"/ygo-db/sets\">\n              <InProgressPage />\n            </Route>\n            <Route path=\"/ygo-db/archetypes\">\n              <InProgressPage />\n            </Route>\n            <Route path=\"/ygo-db/deck-builder\">\n              <InProgressPage />\n            </Route>\n            <Route path=\"*\">\n              <PageNotFound />\n            </Route>\n          </Switch>\n        </Container>\n        <Footer />\n      </BrowserRouter>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport './assets/theme.min.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/logo.6025d515.png\";","module.exports = __webpack_public_path__ + \"static/media/card-back.f16ec535.png\";","module.exports = __webpack_public_path__ + \"static/media/loading.701d0039.gif\";"],"sourceRoot":""}