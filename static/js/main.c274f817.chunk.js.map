{"version":3,"sources":["assets/loading2.gif","components/NavigationBar.js","components/SearchForm.js","components/CardGrid.js","routes/Cards.js","routes/PageNotFound.js","routes/InProgressPage.js","App.js","serviceWorker.js","index.js","assets/logo.png","assets/card-back.png","assets/loading.gif"],"names":["module","exports","NavigationBar","searchFn","useCallback","debounce","term","collapseOnSelect","bg","variant","expand","fixed","Container","Brand","as","Link","to","src","logo","height","Toggle","Collapse","Nav","className","SearchForm","initialParams","fname","type","race","attribute","cardEffect","banList","format","archetype","rarity","cardSet","linkArrow","useState","params","setParams","types","Main","Extra","races","Monster","Spell","Trap","onChange","e","target","name","value","search","_","Header","Form","Group","Label","InputGroup","size","Prepend","Text","FormControl","placeholder","Body","Control","Object","keys","map","key","label","Button","block","onClick","Card","loaded","setLoaded","Image","cardBack","onLoad","style","display","cursor","CardGrid","cards","selectedCard","setSelectedCard","showModal","setShowModal","Row","card","Col","sm","md","lg","id","card_images","image_url_small","onSelectCard","Modal","show","onHide","centered","closeButton","Title","image_url","Cards","loading","body","loadingGif","data","PageNotFound","InProgressPage","App","BASE_URL","setCards","loadingCards","setLoadingCards","useEffect","axios","get","then","res","console","log","catch","err","finally","searchCards","JSON","stringify","searchTerm","path","exact","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.c274f817.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/loading2.36101818.gif\";","import React, { useCallback } from 'react';\nimport { Link } from 'react-router-dom';\nimport NavBar from 'react-bootstrap/Navbar';\nimport Nav from 'react-bootstrap/Nav';\nimport Container from 'react-bootstrap/Container';\nimport Form from 'react-bootstrap/Form';\nimport FormControl from 'react-bootstrap/FormControl';\nimport InputGroup from 'react-bootstrap/InputGroup';\nimport debounce from 'lodash/debounce';\nimport logo from '../assets/logo.png'\n\nconst NavigationBar = ({ searchFn }) => {\n  const debouncedSearch = useCallback(debounce(term => searchFn(term), 1000), []);\n\n  return (  \n    <div>            \n      <NavBar collapseOnSelect bg=\"dark\" variant=\"dark\" expand=\"lg\" fixed=\"top\">\n        <Container>\n          <NavBar.Brand as={Link} to=\"/cards\">\n            <img src={logo} height=\"50\"/>\n          </NavBar.Brand>\n          <NavBar.Toggle></NavBar.Toggle>\n          <NavBar.Collapse>\n            <Nav className=\"ml-auto\">\n              <Nav.Link as={Link} to=\"/cards\" className=\"ml-5\">Cards</Nav.Link>\n              <Nav.Link as={Link} to=\"/decks\" className=\"ml-5\">Decks</Nav.Link>\n              <Nav.Link as={Link} to=\"/sets\" className=\"ml-5\">Sets</Nav.Link>\n              <Nav.Link as={Link} to=\"/archetypes\" className=\"ml-5\">Archetypes</Nav.Link>\n              <Nav.Link as={Link} to=\"/deck-builder\" className=\"ml-5\">Deck Builder</Nav.Link>\n            </Nav>\n            {/* <Form>\n              <InputGroup>\n                <InputGroup.Prepend>\n                  <InputGroup.Text variant=\"primary\"><i className=\"fa fa-search\"></i></InputGroup.Text>\n                </InputGroup.Prepend>\n                <FormControl type=\"text\" placeholder=\"Search Cards\" className=\"mr-2\" onChange={e => debouncedSearch(e.target.value)}></FormControl>\n              </InputGroup>\n            </Form> */}\n          </NavBar.Collapse>\n        </Container>\n      </NavBar>\n    </div>\n  );\n};\n\nexport default NavigationBar;\n","import React, { useState, useEffect } from 'react';\nimport Card from 'react-bootstrap/Card';\nimport Form from 'react-bootstrap/Form';\nimport FormControl from 'react-bootstrap/FormControl';\nimport InputGroup from 'react-bootstrap/InputGroup';\nimport Button from 'react-bootstrap/Button';\nimport * as _ from 'lodash';\n\nconst SearchForm = ({ searchFn }) => {\n  const initialParams = {\n    fname: '',\n    type: '',\n    race: '',\n    attribute: '',\n    cardEffect: '',\n    banList: '',\n    format: '',\n    archetype: '',\n    rarity: '',\n    cardSet: '',\n    linkArrow: ''\n  };\n\n  const [params, setParams] = useState(initialParams);\n\n  const types = {\n    Main: [\n      'Effect Monster', 'Flip Effect Monster', 'Flip Tuner Effect Monster', 'Gemini Monster',\n      'Normal Monster', 'Normal Tuner Monster', 'Pendulum Effect Monster', 'Pendulum Flip Effect Monster',\n      'Pendulum Normal Monster', 'Pendulum Tuner Effect Monster', 'Ritual Effect Monster',\n      'Skill Card', 'Spell Card', 'Spirit Monster', 'Toon Monster', 'Trap Card', 'Tuner Monster',\n      'Union Effect Monster'\n    ],\n    Extra: [\n      'Fusion Monster', 'Link Monster', 'Pendulum Effect Fusion Monster', 'Synchro Monster',\n      'Synchro  Pendulum Effect Monster', 'Synchro Tuner Monster', 'XYZ Monster',\n      'XYZ Pendulum Effect Monster'\n    ]\n  };\n\n  const races = {\n    Monster: [\n      'Aqua', 'Beast', 'Beast-warrior', 'Creator-God', 'Cyberse', 'Dinosaur', 'Divine-Beast',\n      'Dragon', 'Fairy', 'Fiend', 'Fish', 'Insect', 'Machine', 'Plant', 'Psychic', 'Pyro', 'Reptile',\n      'Rock', 'Sea Serpent', 'Spellcaster', 'Thunder', 'Warrior', 'Winged-Beast'\n    ],\n    Spell: ['Normal', 'Field', 'Equip', 'Continous', 'Quick-Play', 'Ritual'],\n    Trap: ['Normal', 'Continous', 'Counter']\n  };\n\n  const attributes = ['DARK', 'EARTH', 'FIRE', 'LIGHT', 'WATER', 'WIND', 'DIVINE'];\n\n  const cardEffects = [\n    'Back to Deck', 'Back to Hand', 'Banish', 'Change ATK or DEF', 'Control',\n    'Counter', 'Damage LP', 'Destroy Monster', 'Direct Attack', 'Draw', 'Effect Damage',\n    'Fusion-Related', 'Gamble', 'Graveyard', 'Increase Level', 'LINK-Related', 'Negate', 'Pendulum-Related',\n    'Piercing', 'Recover LP', 'Repeat Attack', 'Ritual-Related', 'Search', 'Select', 'Special Summon',\n    'Synchro-Related', 'Token', 'Tuner-Related', 'Win the Duel', 'XYZ-Related'\n  ];\n\n  const banLists = ['TCG', 'OCG', 'Goat'];\n\n  const formats = ['Duel Links', 'Speed Duel', 'Rush Duel', 'GOAT', 'OCG GOAT'];\n\n  const archetypes = [];\n\n  const rarities = [\n    'Common', 'Collector\\'s Rare'\n  ];\n\n  const cardSets = [];\n\n  const linkArrows = [];\n\n  const onChange = (e) => {\n    setParams({...params, [e.target.name]: e.target.value});\n  };\n\n  const search = (params) => {\n    searchFn(_.pickBy(params));\n  };\n\n  const reset = () => {\n    setParams(initialParams);\n    search(initialParams);\n  };\n\n  return (\n    <div className=\"mb-4\">\n      <Card>\n        <Card.Header>\n          <Form.Group>\n            <Form.Label className=\"small\">Card Name</Form.Label>\n            <InputGroup size=\"sm\">\n              <InputGroup.Prepend>\n                <InputGroup.Text variant=\"primary\"><i className=\"fa fa-search\"></i></InputGroup.Text>\n              </InputGroup.Prepend>\n              <FormControl type=\"text\" placeholder=\"Search Cards\" name=\"fname\" value={params.fname} onChange={onChange}></FormControl>\n            </InputGroup>\n          </Form.Group>\n        </Card.Header>\n        <Card.Body className=\"row\">\n          <Form.Group className=\"col-lg-6 col-md-12\">\n            <Form.Label className=\"small\">Card Type</Form.Label>\n            <Form.Control as=\"select\" size=\"sm\" name=\"type\" value={params.type} onChange={onChange}>\n              <option value=\"\">ALL</option>\n              {Object.keys(types).map(key => (\n                <optgroup label={key}>\n                  {types[key].map(type => <option value={type}>{type}</option>)}\n                </optgroup>\n              ))}\n            </Form.Control>\n          </Form.Group>\n          <Form.Group className=\"col-lg-6 col-md-12\">\n            <Form.Label className=\"small\">Race</Form.Label>\n            <Form.Control as=\"select\" size=\"sm\" name=\"race\" value={params.race} onChange={onChange}>\n              <option value=\"\">ALL</option> \n              {Object.keys(races).map(key => (\n                <optgroup label={key}>\n                  {races[key].map(race => <option value={race}>{race}</option>)}\n                </optgroup>\n              ))}\n            </Form.Control>\n          </Form.Group>\n          <Form.Group className=\"col-lg-6 col-md-12\">\n            <Form.Label className=\"small\">Attribute</Form.Label>\n            <Form.Control as=\"select\" size=\"sm\" name=\"attribute\" value={params.attribute} onChange={onChange}>\n              <option value=\"\">ALL</option>\n              {attributes.map(attribute => <option value={attribute}>{attribute}</option>)}\n            </Form.Control>\n          </Form.Group>\n          <Form.Group className=\"col-lg-6 col-md-12\">\n            <Form.Label className=\"small\">Card Effect</Form.Label>\n            <Form.Control as=\"select\" size=\"sm\" name=\"cardEffect\" value={params.cardEffect} onChange={onChange}>\n              <option value=\"\">ALL</option>\n              {cardEffects.map(cardEffect => <option value={cardEffect}>{cardEffect}</option>)}\n            </Form.Control>\n          </Form.Group>\n          <Form.Group className=\"col-lg-6 col-md-12\">\n            <Form.Label className=\"small\">Ban List</Form.Label>\n            <Form.Control as=\"select\" size=\"sm\" name=\"banList\" value={params.banList} onChange={onChange}>\n              <option value=\"\">ALL</option>\n              {banLists.map(banList => <option value={banList}>{banList}</option>)}\n            </Form.Control>\n          </Form.Group>\n          <Form.Group className=\"col-lg-6 col-md-12\">\n            <Form.Label className=\"small\">Format</Form.Label>\n            <Form.Control as=\"select\" size=\"sm\" name=\"format\" value={params.format} onChange={onChange}>\n              <option value=\"\">ALL</option>\n              {formats.map(format => <option value={format}>{format}</option>)}\n            </Form.Control>\n          </Form.Group>\n          <Form.Group className=\"col-lg-6 col-md-12\">\n            <Form.Label className=\"small\">Archetype</Form.Label>\n            <Form.Control as=\"select\" size=\"sm\" name=\"archetype\" value={params.archetype} onChange={onChange}>\n              <option value=\"\">ALL</option>\n              {archetypes.map(archetype => <option value={archetype}>{archetype}</option>)}\n            </Form.Control>\n          </Form.Group>\n          <Form.Group className=\"col-lg-6 col-md-12\">\n            <Form.Label className=\"small\">Rarity</Form.Label>\n            <Form.Control as=\"select\" size=\"sm\" name=\"rarity\" value={params.rarity} onChange={onChange}>\n              <option value=\"\">ALL</option>\n              {rarities.map(rarity => <option value={rarity}>{rarity}</option>)}\n            </Form.Control>\n          </Form.Group>\n          <Form.Group className=\"col-lg-6 col-md-12\">\n            <Form.Label className=\"small\">Card Set</Form.Label>\n            <Form.Control as=\"select\" size=\"sm\" name=\"cardSet\" value={params.cardSet} onChange={onChange}>\n              <option value=\"\">ALL</option>\n              {cardSets.map(cardSet => <option value={cardSet}>{cardSet}</option>)}\n            </Form.Control>\n          </Form.Group>\n          <Form.Group className=\"col-lg-6 col-md-12\">\n            <Form.Label className=\"small\">Link Arrow</Form.Label>\n            <Form.Control as=\"select\" size=\"sm\" name=\"linkArrow\" value={params.linkArrow} onChange={onChange}>\n              <option value=\"\">ALL</option>\n              {linkArrows.map(linkArrow => <option value={linkArrow}>{linkArrow}</option>)}\n            </Form.Control>\n          </Form.Group>\n          <div className=\"col-lg-6 col-md-12\">\n            <Button variant=\"warning\" className=\"mt-3\" block onClick={reset}>Reset</Button>\n          </div>\n          <div className=\"col-lg-6 col-md-12\">\n            <Button className=\"mt-3\" block onClick={() => search(params)}>Search</Button>\n          </div>\n        </Card.Body>\n      </Card>\n    </div>\n  );\n};\n\nexport default SearchForm;\n\n","import React, { useState } from 'react';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Image from 'react-bootstrap/Image';\nimport Modal from 'react-bootstrap/Modal';\nimport cardBack from '../assets/card-back.png'\n\nconst CardGrid = ({cards}) => {\n  const [selectedCard, setSelectedCard] = useState(cards ? cards[0] : {});\n  const [showModal, setShowModal] = useState(false);\n\n  const onSelectCard = card => {\n    setSelectedCard(card);\n    setShowModal(true);\n  };\n\n  return (\n    <div>\n      <Row className=\"d-flex\">\n        {cards.map(card => (\n          <Col sm={6} md={6} lg={3} className=\"mb-3 d-flex justify-content-center\" key={card.id}>\n            <Card src={card?.card_images[0]?.image_url_small} height={250} onClick={() => onSelectCard(card)} style={{ cursor: 'pointer' }} />\n          </Col>\n        ))}\n      </Row>\n\n      <Modal show={showModal} onHide={() => setShowModal(false)} centered=\"true\">\n        <Modal.Header closeButton>\n          <Modal.Title>{selectedCard?.name}</Modal.Title>\n        </Modal.Header>\n        <Modal.Body className=\"d-flex justify-content-center\">\n          <Card src={selectedCard?.card_images[0]?.image_url} className=\"container-fluid\"></Card>\n        </Modal.Body>\n      </Modal> \n    </div>\n  );\n}\n\nconst Card = ({ src, height, onClick }) => {\n  const [loaded, setLoaded] = useState(false);\n\n  return (\n    <>\n      {loaded\n        ? null\n        : <Image src={cardBack} height={height}></Image>\n      }\n      <Image src={src} \n        height={height} onClick={onClick} \n        onLoad={() => setLoaded(true)}\n        style= {{ display: loaded ? '' : 'none', cursor: 'pointer' }}/>\n    </>  \n  );\n};\n\nexport default CardGrid;","import React from 'react';\nimport SettingsBar from '../components/SettingsBar';\nimport SearchForm from '../components/SearchForm';\nimport CardGrid from '../components/CardGrid';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Card from 'react-bootstrap/Card';\nimport Image from 'react-bootstrap/Image';\nimport loadingGif from '../assets/loading.gif';\nimport loadingGif2 from '../assets/loading2.gif';\n\nconst Cards = ({ cards, searchFn, loading }) => {\n  const search = params => {\n    searchFn(params);\n  };\n\n  return (\n    <div>\n      {/* <SettingsBar /> */}\n      <Row>\n        <Col md={4} sm={12}>\n          <SearchForm searchFn={search} />\n        </Col>\n        <Col md={8} sm={12}>\n          {loading\n            ? <Card className=\"text-center\" body>\n                <Image src={loadingGif}></Image>\n                <h2 className=\"mt-4\">Loading.....</h2>\n              </Card>\n            : <CardGrid cards={cards.data} />\n          }\n        </Col>\n      </Row>\n    </div>\n  );\n};\n\nexport default Cards;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nconst PageNotFound = () => {\n  return (\n    <div className=\"text-center mt-4\">\n      <h2>404</h2>\n      <p>Page Not Found</p>\n      <Link to=\"/\">HOME</Link>\n    </div>\n  );\n};\n\nexport default PageNotFound;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nconst InProgressPage = () => {\n  return (\n    <div className=\"text-center mt-4\">\n      <h2>In Progress</h2>\n      <p>Coming Soon</p>\n      <Link to=\"/\">HOME</Link>\n    </div>\n  );\n};\n\nexport default InProgressPage;\n","import React, { useState, useEffect } from 'react';\nimport './App.css';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\nimport NavigationBar from './components/NavigationBar';\nimport Container from 'react-bootstrap/Container';\nimport Cards from './routes/Cards';\nimport Decks from './routes/Decks';\nimport PageNotFound from './routes/PageNotFound';\nimport InProgressPage from './routes/InProgressPage';\nimport axios from 'axios';\n\nfunction App() {\n  const BASE_URL = 'https://db.ygoprodeck.com/api/v7/cardinfo.php?num=25&offset=0';\n  const [cards, setCards] = useState({ data: [] });\n  const [loadingCards, setLoadingCards] = useState(false);\n\n  useEffect(() => {\n    setLoadingCards(true);\n    axios.get(BASE_URL)\n      .then(res => {\n        console.log(res.data);\n        setCards(res.data);\n      })\n      .catch(err => setCards([]))\n      .finally(() => setLoadingCards(false));\n\n  }, []);\n\n  const searchCard = (searchTerm) => {\n    console.log('Searching: ' + searchTerm);\n\n    axios.get(`${BASE_URL}&fname=${searchTerm}`)\n      .then(res => setCards(res.data));\n  };\n\n  const searchCards = (params) => {\n    console.log('PARAMS: ' + JSON.stringify(params));\n\n    setLoadingCards(true);\n    axios.get(BASE_URL, {params})\n      .then(res => setCards(res.data))\n      .catch(err => {\n        console.log(err);\n        setCards([]);\n      })\n      .finally(() => setLoadingCards(false));\n  };\n\n  return (\n    <div>\n      <BrowserRouter>\n        <NavigationBar searchFn={searchCard}></NavigationBar>\n        <div style={{height: 110}}></div>\n        <Container>\n          <Switch>\n            <Route path=\"/\" exact>\n              <Cards cards={cards} searchFn={searchCards} loading={loadingCards} />\n            </Route>\n            <Route path=\"/cards\">\n              <Cards cards={cards} searchFn={searchCards} loading={loadingCards} />\n            </Route>\n            <Route path=\"/decks\">\n              <InProgressPage />\n            </Route>\n            <Route path=\"/sets\">\n              <InProgressPage />\n            </Route>\n            <Route path=\"/archetypes\">\n              <InProgressPage />\n            </Route>\n            <Route path=\"/deck-builder\">\n              <InProgressPage />\n            </Route>\n            <Route path=\"*\">\n              <PageNotFound />\n            </Route>\n          </Switch>\n        </Container>\n      </BrowserRouter>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport './assets/theme.min.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/logo.6025d515.png\";","module.exports = __webpack_public_path__ + \"static/media/card-back.f16ec535.png\";","module.exports = __webpack_public_path__ + \"static/media/loading.701d0039.gif\";"],"sourceRoot":""}